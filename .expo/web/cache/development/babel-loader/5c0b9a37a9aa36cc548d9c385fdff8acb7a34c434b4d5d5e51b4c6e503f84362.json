{"ast":null,"code":"var _jsxFileName = \"/Users/payalsah/Documents/FruitShopApp/screens/CartScreen.tsx\";\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport { useCart } from '../contexts/CartContext';\nimport { useNavigation } from '@react-navigation/native';\nimport { auth } from '../firebaseConfig';\nimport { onAuthStateChanged } from 'firebase/auth';\nimport * as Linking from 'expo-linking';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function CartScreen() {\n  const {\n    cart,\n    removeFromCart,\n    totalPrice\n  } = useCart();\n  const [currentUser, setCurrentUser] = useState(null);\n  const [selectedPayment, setSelectedPayment] = useState(null);\n  const [name, setName] = useState('');\n  const [contactNumber, setContactNumber] = useState('');\n  const [address, setAddress] = useState('');\n  const [isExpanded, setIsExpanded] = useState(false);\n  const [animatedHeight] = useState(new Animated.Value(0));\n  const navigation = useNavigation();\n  const showAlert = (title, message) => {\n    if (Platform.OS === 'web') {\n      windowalert(`${title}: ${message}`);\n    } else {\n      Alert.alert(title, message);\n    }\n  };\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, user => {\n      setCurrentUser(user);\n    });\n    return () => unsubscribe();\n  }, []);\n  const handleRemove = id => {\n    Alert.alert('Remove Item', 'Are you sure you want to remove this item from your cart?', [{\n      text: 'Cancel',\n      style: 'cancel'\n    }, {\n      text: 'Remove',\n      onPress: () => removeFromCart(id)\n    }]);\n  };\n  const sendOrderMessage = paymentType => {\n    const orderDetails = cart.map(item => `${item.name} x${item.cartQuantity}`).join(', ');\n    const message = `Order Details:\\nName: ${name}\\nContact: ${contactNumber}\\nProducts: ${orderDetails}\\nTotal Price: â‚¹${totalPrice.toFixed(2)}\\nPayment Method: ${paymentType}`;\n    Linking.openURL(`sms:${contactNumber}?body=${encodeURIComponent(message)}`);\n    Linking.openURL(`whatsapp://send?phone=${contactNumber}&text=${encodeURIComponent(message)}`);\n    const ownerNumber = '6205720019';\n    Linking.openURL(`sms:${ownerNumber}?body=${encodeURIComponent(message)}`);\n    Linking.openURL(`whatsapp://send?phone=${ownerNumber}&text=${encodeURIComponent(message)}`);\n  };\n  const handleCheckout = () => {\n    if (!currentUser) {\n      Alert.alert('Authentication Required', 'You need to log in to proceed to checkout.', [{\n        text: 'Cancel',\n        style: 'cancel'\n      }, {\n        text: 'Login',\n        onPress: () => navigation.navigate('Login')\n      }]);\n    } else if (!name || !contactNumber || !address) {\n      Alert.alert('Missing Information', 'Please provide your name , contact number and address.');\n    } else if (selectedPayment === 'Cash on Delivery') {\n      Alert.alert('Order Confirmed', 'Your order has been placed and will be paid on delivery.');\n      sendOrderMessage('Cash on Delivery');\n    } else if (selectedPayment === 'Online Payment') {\n      navigation.navigate('OnlinePayment', {\n        name,\n        contactNumber,\n        totalPrice,\n        cart,\n        address\n      });\n    } else {\n      Alert.alert('Select Payment Method', 'Please choose a payment method to proceed.');\n    }\n  };\n  useEffect(() => {\n    Animated.timing(animatedHeight, {\n      toValue: isExpanded ? 300 : 0,\n      duration: 300,\n      useNativeDriver: false\n    }).start();\n  }, [isExpanded]);\n  const toggleExpand = () => {\n    setIsExpanded(prev => !prev);\n  };\n  const renderCartItem = ({\n    item\n  }) => _jsxDEV(View, {\n    style: styles.cartItem,\n    children: [_jsxDEV(Text, {\n      style: styles.itemText,\n      children: item.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 7\n    }, this), _jsxDEV(Text, {\n      style: styles.itemText,\n      children: [\"Quantity: \", item.cartQuantity]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 7\n    }, this), _jsxDEV(Text, {\n      style: styles.itemText,\n      children: [\"Price: \\u20B9\", item.price.toFixed(2)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 7\n    }, this), _jsxDEV(TouchableOpacity, {\n      onPress: () => handleRemove(item.id),\n      style: styles.removeButton,\n      children: _jsxDEV(Text, {\n        style: styles.removeButtonText,\n        children: \"Remove\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 357,\n    columnNumber: 5\n  }, this);\n  return _jsxDEV(View, {\n    style: styles.container,\n    children: [_jsxDEV(Text, {\n      style: styles.title,\n      children: \"Your Cart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 7\n    }, this), cart.length === 0 ? _jsxDEV(Text, {\n      style: styles.emptyCartText,\n      children: \"Your cart is empty.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 9\n    }, this) : _jsxDEV(_Fragment, {\n      children: [_jsxDEV(FlatList, {\n        data: cart,\n        renderItem: renderCartItem,\n        keyExtractor: item => item.id.toString()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 11\n      }, this), _jsxDEV(Animated.View, {\n        style: {\n          height: animatedHeight,\n          overflow: 'hidden'\n        },\n        children: _jsxDEV(FlatList, {\n          data: cart,\n          renderItem: renderCartItem,\n          keyExtractor: item => item.id.toString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 13\n      }, this), _jsxDEV(TouchableOpacity, {\n        onPress: toggleExpand,\n        style: styles.toggleButton,\n        children: _jsxDEV(Text, {\n          style: styles.toggleButtonText,\n          children: isExpanded ? 'View Less' : 'View All Items'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 13\n      }, this), _jsxDEV(View, {\n        style: styles.addressContainer,\n        children: [_jsxDEV(Text, {\n          style: styles.inputLabel,\n          children: \"Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 13\n        }, this), _jsxDEV(TextInput, {\n          style: styles.input,\n          value: name,\n          onChangeText: setName,\n          placeholder: \"Enter your name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 13\n        }, this), _jsxDEV(Text, {\n          style: styles.inputLabel,\n          children: \"Contact Number:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 430,\n          columnNumber: 13\n        }, this), _jsxDEV(TextInput, {\n          style: styles.input,\n          value: contactNumber,\n          onChangeText: setContactNumber,\n          placeholder: \"Enter your contact number\",\n          keyboardType: \"phone-pad\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 431,\n          columnNumber: 13\n        }, this), _jsxDEV(Text, {\n          style: styles.inputLabel,\n          children: \"Address:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 438,\n          columnNumber: 13\n        }, this), _jsxDEV(TextInput, {\n          style: styles.input,\n          value: address,\n          onChangeText: setAddress,\n          placeholder: \"Enter your address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 439,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 422,\n        columnNumber: 11\n      }, this), _jsxDEV(View, {\n        style: styles.paymentContainer,\n        children: [_jsxDEV(Text, {\n          style: styles.paymentTitle,\n          children: \"Select Payment Method:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 450,\n          columnNumber: 13\n        }, this), _jsxDEV(TouchableOpacity, {\n          style: [styles.paymentOption, selectedPayment === 'Cash on Delivery' && styles.selectedOption],\n          onPress: () => setSelectedPayment('Cash on Delivery'),\n          children: _jsxDEV(Text, {\n            style: styles.paymentText,\n            children: \"Cash on Delivery\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 458,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 451,\n          columnNumber: 13\n        }, this), _jsxDEV(TouchableOpacity, {\n          style: [styles.paymentOption, selectedPayment === 'Online Payment' && styles.selectedOption],\n          onPress: () => setSelectedPayment('Online Payment'),\n          children: _jsxDEV(Text, {\n            style: styles.paymentText,\n            children: \"Online Payment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 467,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 460,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 449,\n        columnNumber: 11\n      }, this), _jsxDEV(View, {\n        style: styles.summaryContainer,\n        children: [_jsxDEV(Text, {\n          style: styles.summaryText,\n          children: [\"Total Price: \\u20B9\", totalPrice.toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 471,\n          columnNumber: 13\n        }, this), _jsxDEV(TouchableOpacity, {\n          onPress: handleCheckout,\n          style: styles.checkoutButton,\n          children: _jsxDEV(Text, {\n            style: styles.checkoutButtonText,\n            children: \"Proceed to Checkout\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 473,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 472,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 470,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 368,\n    columnNumber: 5\n  }, this);\n}\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 20,\n    backgroundColor: '#f7f7f7'\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    textAlign: 'center',\n    marginBottom: 20\n  },\n  cartItem: {\n    marginBottom: 15,\n    borderBottomWidth: 1,\n    borderBottomColor: '#ddd',\n    paddingBottom: 10\n  },\n  itemText: {\n    fontSize: 16,\n    marginBottom: 5\n  },\n  removeButton: {\n    marginTop: 10,\n    backgroundColor: '#FF6347',\n    padding: 10,\n    borderRadius: 5\n  },\n  removeButtonText: {\n    color: '#fff',\n    textAlign: 'center'\n  },\n  emptyCartText: {\n    fontSize: 18,\n    color: 'gray',\n    textAlign: 'center',\n    marginTop: 20\n  },\n  showItemsButton: {\n    marginTop: 10,\n    backgroundColor: '#4CAF50',\n    padding: 10,\n    borderRadius: 5\n  },\n  showItemsText: {\n    color: '#fff',\n    textAlign: 'center',\n    fontSize: 16\n  },\n  addressContainer: {\n    marginVertical: 20\n  },\n  inputLabel: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    marginBottom: 5\n  },\n  input: {\n    borderWidth: 1,\n    borderColor: '#ccc',\n    borderRadius: 5,\n    padding: 10,\n    marginBottom: 10\n  },\n  paymentContainer: {\n    marginTop: 20,\n    padding: 10\n  },\n  paymentTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginBottom: 10\n  },\n  paymentOption: {\n    padding: 15,\n    marginVertical: 5,\n    borderRadius: 5,\n    borderWidth: 1,\n    borderColor: '#ddd'\n  },\n  selectedOption: {\n    borderColor: '#4CAF50',\n    backgroundColor: '#e8f5e9'\n  },\n  paymentText: {\n    fontSize: 16\n  },\n  summaryContainer: {\n    marginTop: 20,\n    padding: 15,\n    borderTopWidth: 1,\n    borderTopColor: '#ddd',\n    backgroundColor: '#fff',\n    borderRadius: 5\n  },\n  summaryText: {\n    fontSize: 18,\n    fontWeight: 'bold'\n  },\n  checkoutButton: {\n    marginTop: 10,\n    backgroundColor: '#FFA500',\n    padding: 15,\n    borderRadius: 5\n  },\n  checkoutButtonText: {\n    color: '#fff',\n    textAlign: 'center',\n    fontSize: 18\n  },\n  toggleButton: {\n    marginTop: 10,\n    backgroundColor: '#FFA500',\n    padding: 10,\n    borderRadius: 5\n  },\n  toggleButtonText: {\n    color: '#fff',\n    textAlign: 'center',\n    fontSize: 16\n  }\n});","map":{"version":3,"names":["React","useEffect","useState","View","Text","FlatList","TouchableOpacity","StyleSheet","Alert","TextInput","Animated","useCart","useNavigation","auth","onAuthStateChanged","Linking","Platform","jsxDEV","_jsxDEV","Fragment","_Fragment","CartScreen","cart","removeFromCart","totalPrice","currentUser","setCurrentUser","selectedPayment","setSelectedPayment","name","setName","contactNumber","setContactNumber","address","setAddress","isExpanded","setIsExpanded","animatedHeight","Value","navigation","showAlert","title","message","OS","windowalert","alert","unsubscribe","user","handleRemove","id","text","style","onPress","sendOrderMessage","paymentType","orderDetails","map","item","cartQuantity","join","toFixed","openURL","encodeURIComponent","ownerNumber","handleCheckout","navigate","timing","toValue","duration","useNativeDriver","start","toggleExpand","prev","renderCartItem","styles","cartItem","children","itemText","fileName","_jsxFileName","lineNumber","columnNumber","price","removeButton","removeButtonText","container","length","emptyCartText","data","renderItem","keyExtractor","toString","height","overflow","toggleButton","toggleButtonText","addressContainer","inputLabel","input","value","onChangeText","placeholder","keyboardType","paymentContainer","paymentTitle","paymentOption","selectedOption","paymentText","summaryContainer","summaryText","checkoutButton","checkoutButtonText","create","flex","padding","backgroundColor","fontSize","fontWeight","textAlign","marginBottom","borderBottomWidth","borderBottomColor","paddingBottom","marginTop","borderRadius","color","showItemsButton","showItemsText","marginVertical","borderWidth","borderColor","borderTopWidth","borderTopColor"],"sources":["/Users/payalsah/Documents/FruitShopApp/screens/CartScreen.tsx"],"sourcesContent":["// import React, { useEffect, useState } from 'react';\n// import {\n//   View,\n//   Text,\n//   FlatList,\n//   TouchableOpacity,\n//   StyleSheet,\n//   Alert,\n// } from 'react-native';\n// import { useCart } from '../contexts/CartContext'; // Cart context\n// import { useNavigation } from '@react-navigation/native';\n// import { auth } from '../firebaseConfig';\n// import { onAuthStateChanged } from 'firebase/auth';\n// import { User } from 'firebase/auth';\n// import { RootStackParamList } from '../navigation/types';\n// import { NativeStackNavigationProp } from '@react-navigation/native-stack';\n\n\n// interface CartItem {\n//   id: number;\n//   name: string;\n//   price: number;\n//   cartQuantity: number;\n// }\n\n// type CartScreenNavigationProp = NativeStackNavigationProp<RootStackParamList, 'Cart'>;\n\n\n// export default function CartScreen() {\n//   const { cart, removeFromCart, totalPrice } = useCart(); // Cart context\n//   const [user, setUser] = useState(null); // Firebase auth state\n//   const [selectedPayment, setSelectedPayment] = useState<string | null>(null);\n//   const [currentUser, setCurrentUser] = useState<User | null>(null); // Allow User | null\n//   const navigation = useNavigation();\n\n//   useEffect(() => {\n//     const unsubscribe = onAuthStateChanged(auth, (user) => {\n//       setCurrentUser(user); // Sets the user if logged in\n//     });\n//     return () => unsubscribe(); // Cleanup subscription\n//   }, []);\n\n//   const handleRemove = (id: number) => {\n//     Alert.alert('Remove Item', 'Are you sure you want to remove this item from your cart?', [\n//       { text: 'Cancel', style: 'cancel' },\n//       { text: 'Remove', onPress: () => removeFromCart(id) },\n//     ]);\n//   };\n\n//   const handleCheckout = () => {\n//     if (!currentUser) {\n//       // If user not logged in, navigate to login\n//       Alert.alert(\n//         'Authentication Required',\n//         'You need to log in to proceed to checkout.',\n//         [\n//           { text: 'Cancel', style: 'cancel' },\n//           { text: 'Login', onPress: () => navigation.navigate('Login') },\n//         ]\n//       );\n//     } else if (selectedPayment === 'Online Payment') {\n//       // Navigate to online payment\n//       navigation.navigate('OnlinePayment'); // Replace with your Online Payment screen\n//     } else if (selectedPayment === 'Cash on Delivery') {\n//       // Confirm cash on delivery order\n//       Alert.alert('Order Confirmed', 'Your order will be paid on delivery.');\n//     } else {\n//       // No payment method selected\n//       Alert.alert('Select Payment Method', 'Please choose a payment method to proceed.');\n//     }\n//   };\n\n//   const renderCartItem = ({ item }: { item: CartItem }) => (\n//     <View style={styles.cartItem}>\n//       <Text style={styles.itemText}>{item.name}</Text>\n//       <Text style={styles.itemText}>Quantity: {item.cartQuantity}</Text>\n//       <Text style={styles.itemText}>Price: â‚¹{item.price.toFixed(2)}</Text>\n//       <TouchableOpacity onPress={() => handleRemove(item.id)} style={styles.removeButton}>\n//         <Text style={styles.removeButtonText}>Remove</Text>\n//       </TouchableOpacity>\n//     </View>\n//   );\n\n//   return (\n//     <View style={styles.container}>\n//       <Text style={styles.title}>Your Cart</Text>\n//       {cart.length === 0 ? (\n//         <Text style={styles.emptyCartText}>Your cart is empty.</Text>\n//       ) : (\n//         <>\n//           <FlatList\n//             data={cart}\n//             renderItem={renderCartItem}\n//             keyExtractor={(item) => item.id.toString()}\n//           />\n//           <View style={styles.paymentContainer}>\n//             <Text style={styles.paymentTitle}>Select Payment Method:</Text>\n//             <TouchableOpacity\n//               style={[\n//                 styles.paymentOption,\n//                 selectedPayment === 'Cash on Delivery' && styles.selectedOption,\n//               ]}\n//               onPress={() => setSelectedPayment('Cash on Delivery')}\n//             >\n//               <Text style={styles.paymentText}>Cash on Delivery</Text>\n//             </TouchableOpacity>\n//             <TouchableOpacity\n//               style={[\n//                 styles.paymentOption,\n//                 selectedPayment === 'Online Payment' && styles.selectedOption,\n//               ]}\n//               onPress={() => setSelectedPayment('Online Payment')}\n//             >\n//               <Text style={styles.paymentText}>Online Payment</Text>\n//             </TouchableOpacity>\n//           </View>\n//           <View style={styles.summaryContainer}>\n//             <Text style={styles.summaryText}>Total Price: â‚¹{totalPrice.toFixed(2)}</Text>\n//             <TouchableOpacity onPress={handleCheckout} style={styles.checkoutButton}>\n//               <Text style={styles.checkoutButtonText}>Proceed to Checkout</Text>\n//             </TouchableOpacity>\n//           </View>\n//         </>\n//       )}\n//     </View>\n//   );\n// }\n\n// const styles = StyleSheet.create({\n//   container: {\n//     flex: 1,\n//     padding: 20,\n//     backgroundColor: '#f7f7f7',\n//   },\n//   title: {\n//     fontSize: 24,\n//     fontWeight: 'bold',\n//     textAlign: 'center',\n//     marginBottom: 20,\n//   },\n//   cartItem: {\n//     marginBottom: 15,\n//     borderBottomWidth: 1,\n//     borderBottomColor: '#ddd',\n//     paddingBottom: 10,\n//   },\n//   itemText: {\n//     fontSize: 16,\n//     marginBottom: 5,\n//   },\n//   removeButton: {\n//     marginTop: 10,\n//     backgroundColor: '#FF6347',\n//     padding: 10,\n//     borderRadius: 5,\n//   },\n//   removeButtonText: {\n//     color: '#fff',\n//     textAlign: 'center',\n//   },\n//   emptyCartText: {\n//     fontSize: 18,\n//     color: 'gray',\n//     textAlign: 'center',\n//     marginTop: 20,\n//   },\n//   paymentContainer: {\n//     marginTop: 20,\n//     padding: 10,\n//   },\n//   paymentTitle: {\n//     fontSize: 18,\n//     fontWeight: 'bold',\n//     marginBottom: 10,\n//   },\n//   paymentOption: {\n//     padding: 15,\n//     marginVertical: 5,\n//     borderRadius: 5,\n//     borderWidth: 1,\n//     borderColor: '#ddd',\n//   },\n//   selectedOption: {\n//     borderColor: '#4CAF50',\n//     backgroundColor: '#e8f5e9',\n//   },\n//   paymentText: {\n//     fontSize: 16,\n//   },\n//   summaryContainer: {\n//     marginTop: 20,\n//     padding: 15,\n//     borderTopWidth: 1,\n//     borderTopColor: '#ddd',\n//     backgroundColor: '#fff',\n//     borderRadius: 5,\n//   },\n//   summaryText: {\n//     fontSize: 18,\n//     fontWeight: 'bold',\n//   },\n//   checkoutButton: {\n//     marginTop: 10,\n//     backgroundColor: '#4CAF50',\n//     padding: 15,\n//     borderRadius: 5,\n//   },\n//   checkoutButtonText: {\n//     color: '#fff',\n//     textAlign: 'center',\n//     fontSize: 18,\n//   },\n// });\n\n\n\nimport React, { useEffect, useState } from 'react';\nimport {\n  View,\n  Text,\n  FlatList,\n  TouchableOpacity,\n  StyleSheet,\n  Alert,\n  TextInput,\n  // Modal,\n  ScrollView,\n  Animated,\n} from 'react-native';\nimport { useCart } from '../contexts/CartContext'; // Cart context\nimport { useNavigation } from '@react-navigation/native';\nimport { auth } from '../firebaseConfig';\nimport { onAuthStateChanged } from 'firebase/auth';\nimport { User } from 'firebase/auth';\nimport { RootStackParamList } from '../navigation/types';\nimport { NativeStackNavigationProp } from '@react-navigation/native-stack';\nimport * as Linking from 'expo-linking';\n\nimport { Platform } from 'react-native';\n\n\nexport interface CartItem {\n  id: number;\n  name: string;\n  price: number;\n  cartQuantity: number;\n}\n\ntype CartScreenNavigationProp = NativeStackNavigationProp<RootStackParamList, 'Cart'>;\n\nexport default function CartScreen() {\n  const { cart, removeFromCart, totalPrice } = useCart(); // Cart context\n  const [currentUser, setCurrentUser] = useState<User | null>(null); // Firebase auth state\n  const [selectedPayment, setSelectedPayment] = useState<string | null>(null);\n  const [name, setName] = useState('');\n  const [contactNumber, setContactNumber] = useState('');\n  const [address, setAddress] = useState('');\n  // const [isModalVisible, setModalVisible] = useState(false); // Modal visibility state\n  const [isExpanded, setIsExpanded] = useState(false); // State to track if the list is expanded\n  const [animatedHeight] = useState(new Animated.Value(0)); // Animated value for height transition\n  const navigation = useNavigation<CartScreenNavigationProp>();\n\n  const showAlert = (title: string, message: string) => {\n    if (Platform.OS === 'web') {\n      windowalert(`${title}: ${message}`);\n    } else {\n      Alert.alert(title, message);\n    }\n  };\n\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, (user) => {\n      setCurrentUser(user); // Sets the user if logged in\n    });\n    return () => unsubscribe(); // Cleanup subscription\n  }, []);\n\n  const handleRemove = (id: number) => {\n    Alert.alert('Remove Item', 'Are you sure you want to remove this item from your cart?', [\n      { text: 'Cancel', style: 'cancel' },\n      { text: 'Remove', onPress: () => removeFromCart(id) },\n    ]);\n  };\n\n  const sendOrderMessage = (paymentType: string) => {\n    const orderDetails = cart\n      .map((item) => `${item.name} x${item.cartQuantity}`)\n      .join(', ');\n    const message = `Order Details:\\nName: ${name}\\nContact: ${contactNumber}\\nProducts: ${orderDetails}\\nTotal Price: â‚¹${totalPrice.toFixed(\n      2\n    )}\\nPayment Method: ${paymentType}`;\n\n\n    // Send message to the customer\n    Linking.openURL(`sms:${contactNumber}?body=${encodeURIComponent(message)}`);\n    Linking.openURL(`whatsapp://send?phone=${contactNumber}&text=${encodeURIComponent(message)}`);\n\n    // Send message to the owner\n    const ownerNumber = '6205720019';\n    Linking.openURL(`sms:${ownerNumber}?body=${encodeURIComponent(message)}`);\n    Linking.openURL(`whatsapp://send?phone=${ownerNumber}&text=${encodeURIComponent(message)}`);\n  \n\n  };\n\n  const handleCheckout = () => {\n    if (!currentUser) {\n      // If user not logged in, navigate to login\n      Alert.alert(\n        'Authentication Required',\n        'You need to log in to proceed to checkout.',\n        [\n          { text: 'Cancel', style: 'cancel' },\n          { text: 'Login', onPress: () => navigation.navigate('Login') },\n        ]\n      );\n    } else if (!name || !contactNumber || !address) {\n      Alert.alert('Missing Information', 'Please provide your name , contact number and address.');\n    } else if (selectedPayment === 'Cash on Delivery') {\n      // Confirm Cash on Delivery order\n      Alert.alert('Order Confirmed', 'Your order has been placed and will be paid on delivery.');\n      sendOrderMessage('Cash on Delivery');\n    } else if (selectedPayment === 'Online Payment') {\n      // Navigate to Online Payment\n      navigation.navigate('OnlinePayment', {\n        name,\n        contactNumber,\n        totalPrice,\n        cart,\n        address,\n      });\n    } else {\n      Alert.alert('Select Payment Method', 'Please choose a payment method to proceed.');\n    }\n  };\n\n  // const toggleModal = () => {\n  //   setModalVisible(!isModalVisible);\n  // };\n\n  useEffect(() => {\n    // Animate the height change\n    Animated.timing(animatedHeight, {\n      toValue: isExpanded ? 300 : 0, // Adjust the height value as needed\n      duration: 300,\n      useNativeDriver: false,\n    }).start();\n  }, [isExpanded]);\n\n  const toggleExpand = () => {\n    setIsExpanded((prev) => !prev);\n  };\n\n\n\n  const renderCartItem = ({ item }: { item: CartItem }) => (\n    <View style={styles.cartItem}>\n      <Text style={styles.itemText}>{item.name}</Text>\n      <Text style={styles.itemText}>Quantity: {item.cartQuantity}</Text>\n      <Text style={styles.itemText}>Price: â‚¹{item.price.toFixed(2)}</Text>\n      <TouchableOpacity onPress={() => handleRemove(item.id)} style={styles.removeButton}>\n        <Text style={styles.removeButtonText}>Remove</Text>\n      </TouchableOpacity>\n    </View>\n  );\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>Your Cart</Text>\n      \n      {cart.length === 0 ? (\n        <Text style={styles.emptyCartText}>Your cart is empty.</Text>\n      ) : (\n        <>\n          <FlatList\n            data={cart}\n            renderItem={renderCartItem}\n            keyExtractor={(item) => item.id.toString()}\n          />\n\n            <Animated.View style={{ height: animatedHeight, overflow: 'hidden' }}>\n              <FlatList\n                data={cart} // Show the remaining items in the expanded section\n                renderItem={renderCartItem}\n                keyExtractor={(item) => item.id.toString()}\n              />\n            </Animated.View>\n            <TouchableOpacity onPress={toggleExpand} style={styles.toggleButton}>\n              <Text style={styles.toggleButtonText}>{isExpanded ? 'View Less' : 'View All Items'}</Text>\n            </TouchableOpacity>\n\n          {/* <TouchableOpacity onPress={toggleModal} style={styles.showItemsButton}>\n            <Text style={styles.showItemsText}>View All Items</Text>\n          </TouchableOpacity> */}\n\n          {/* Modal for displaying all cart items */}\n          {/* <Modal\n            visible={isModalVisible}\n            transparent={true}\n            animationType=\"slide\"\n            onRequestClose={toggleModal}\n          >\n            <View style={styles.modalContainer}>\n              <View style={styles.modalContent}>\n                <Text style={styles.modalTitle}>Cart Items</Text>\n                <ScrollView>\n                  {cart.map((item) => (\n                    <View key={item.id} style={styles.modalItem}>\n                      <Text style={styles.itemText}>{item.name}</Text>\n                      <Text style={styles.itemText}>Quantity: {item.cartQuantity}</Text>\n                      <Text style={styles.itemText}>Price: â‚¹{item.price.toFixed(2)}</Text>\n                    </View>\n                  ))}\n                </ScrollView>\n                <TouchableOpacity onPress={toggleModal} style={styles.closeModalButton}>\n                  <Text style={styles.closeModalText}>Close</Text>\n                </TouchableOpacity>\n              </View>\n            </View>\n          </Modal> */}\n          \n          <View style={styles.addressContainer}>\n            <Text style={styles.inputLabel}>Name:</Text>\n            <TextInput\n              style={styles.input}\n              value={name}\n              onChangeText={setName}\n              placeholder=\"Enter your name\"\n            />\n            <Text style={styles.inputLabel}>Contact Number:</Text>\n            <TextInput\n              style={styles.input}\n              value={contactNumber}\n              onChangeText={setContactNumber}\n              placeholder=\"Enter your contact number\"\n              keyboardType=\"phone-pad\"\n            />\n            <Text style={styles.inputLabel}>Address:</Text>\n            <TextInput\n              style={styles.input}\n              value={address}\n              onChangeText={setAddress}\n              placeholder=\"Enter your address\"\n              // returnKeyType=\"done\"\n              // onSubmitEditing={() => Keyboard.dismiss()}\n            />\n            \n          </View>\n          <View style={styles.paymentContainer}>\n            <Text style={styles.paymentTitle}>Select Payment Method:</Text>\n            <TouchableOpacity\n              style={[\n                styles.paymentOption,\n                selectedPayment === 'Cash on Delivery' && styles.selectedOption,\n              ]}\n              onPress={() => setSelectedPayment('Cash on Delivery')}\n            >\n              <Text style={styles.paymentText}>Cash on Delivery</Text>\n            </TouchableOpacity>\n            <TouchableOpacity\n              style={[\n                styles.paymentOption,\n                selectedPayment === 'Online Payment' && styles.selectedOption,\n              ]}\n              onPress={() => setSelectedPayment('Online Payment')}\n            >\n              <Text style={styles.paymentText}>Online Payment</Text>\n            </TouchableOpacity>\n          </View>\n          <View style={styles.summaryContainer}>\n            <Text style={styles.summaryText}>Total Price: â‚¹{totalPrice.toFixed(2)}</Text>\n            <TouchableOpacity onPress={handleCheckout} style={styles.checkoutButton}>\n              <Text style={styles.checkoutButtonText}>Proceed to Checkout</Text>\n            </TouchableOpacity>\n          </View>\n        </>\n      )}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: { flex: 1, padding: 20, backgroundColor: '#f7f7f7' },\n  title: { fontSize: 24, fontWeight: 'bold', textAlign: 'center', marginBottom: 20 },\n  cartItem: { marginBottom: 15, borderBottomWidth: 1, borderBottomColor: '#ddd', paddingBottom: 10 },\n  itemText: { fontSize: 16, marginBottom: 5 },\n  removeButton: { marginTop: 10, backgroundColor: '#FF6347', padding: 10, borderRadius: 5 },\n  removeButtonText: { color: '#fff', textAlign: 'center' },\n  emptyCartText: { fontSize: 18, color: 'gray', textAlign: 'center', marginTop: 20 },\n  showItemsButton: { marginTop: 10, backgroundColor: '#4CAF50', padding: 10, borderRadius: 5 },\n  showItemsText: { color: '#fff', textAlign: 'center', fontSize: 16 },\n  // modalContainer: { flex: 1, justifyContent: 'center', backgroundColor: 'rgba(0,0,0,0.5)' },\n  // modalContent: { backgroundColor: '#fff', padding: 20, marginHorizontal: 20, borderRadius: 10 },\n  // modalTitle: { fontSize: 20, fontWeight: 'bold', marginBottom: 10, textAlign: 'center' },\n  // modalItem: { marginBottom: 15, borderBottomWidth: 1, borderBottomColor: '#ddd', paddingBottom: 10 },\n  // closeModalButton: { marginTop: 10, backgroundColor: '#FF6347', padding: 10, borderRadius: 5 },\n  // closeModalText: { color: '#fff', textAlign: 'center', fontSize: 16 },\n  addressContainer: { marginVertical: 20 },\n  inputLabel: { fontSize: 16, fontWeight: 'bold', marginBottom: 5 },\n  input: { borderWidth: 1, borderColor: '#ccc', borderRadius: 5, padding: 10, marginBottom: 10 },\n  paymentContainer: { marginTop: 20, padding: 10 },\n  paymentTitle: { fontSize: 18, fontWeight: 'bold', marginBottom: 10 },\n  paymentOption: { padding: 15, marginVertical: 5, borderRadius: 5, borderWidth: 1, borderColor: '#ddd' },\n  selectedOption: { borderColor: '#4CAF50', backgroundColor: '#e8f5e9' },\n  paymentText: { fontSize: 16 },\n  summaryContainer: { marginTop: 20, padding: 15, borderTopWidth: 1, borderTopColor: '#ddd', backgroundColor: '#fff', borderRadius: 5 },\n  summaryText: { fontSize: 18, fontWeight: 'bold' },\n  checkoutButton: { marginTop: 10, backgroundColor: '#FFA500', padding: 15, borderRadius: 5 },\n  checkoutButtonText: { color: '#fff', textAlign: 'center', fontSize: 18 },\n  toggleButton: { marginTop: 10, backgroundColor: '#FFA500', padding: 10, borderRadius: 5 },\n  toggleButtonText: { color: '#fff', textAlign: 'center', fontSize: 16 },\n});\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}