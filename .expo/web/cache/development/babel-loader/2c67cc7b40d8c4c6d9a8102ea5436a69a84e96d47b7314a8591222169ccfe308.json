{"ast":null,"code":"var _jsxFileName = \"/Users/payalsah/Documents/FruitShopApp/screens/CartScreen.tsx\";\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { useCart } from '../contexts/CartContext';\nimport { useNavigation } from '@react-navigation/native';\nimport { getFirestore, doc, getDoc } from 'firebase/firestore';\nimport { auth } from '../firebaseConfig';\nimport { onAuthStateChanged } from 'firebase/auth';\nimport * as Linking from 'expo-linking';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport * as Location from 'expo-location';\nimport haversine from 'haversine-distance';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SHOP_LOCATION = {\n  latitude: 25.5437,\n  longitude: 87.5716\n};\nexport default function CartScreen() {\n  const {\n    cart,\n    removeFromCart,\n    totalPrice\n  } = useCart();\n  const [currentUser, setCurrentUser] = useState(null);\n  const [selectedPayment, setSelectedPayment] = useState(null);\n  const [name, setName] = useState('');\n  const [contactNumber, setContactNumber] = useState('');\n  const [address, setAddress] = useState('');\n  const [isExpanded, setIsExpanded] = useState(true);\n  const [animatedHeight] = useState(new Animated.Value(0));\n  const navigation = useNavigation();\n  const [userDetails, setUserDetails] = useState(null);\n  const [distance, setDistance] = useState(null);\n  const [loadingLocation, setLoadingLocation] = useState(false);\n  useEffect(() => {\n    const fetchUserDetails = async () => {\n      const user = auth.currentUser;\n      if (user) {\n        try {\n          const db = getFirestore();\n          const userDoc = await getDoc(doc(db, 'users', user.uid));\n          if (userDoc.exists()) {\n            setUserDetails(userDoc.data());\n            setAddress(userDoc.data().address || '');\n            setName(userDoc.data().name || '');\n            setContactNumber(userDoc.data().mobile || '');\n          }\n        } catch (error) {\n          console.error('Error fetching user details: ', error);\n        }\n      }\n    };\n    fetchUserDetails();\n  }, []);\n  const showAlert = (title, message, onRemove) => {\n    if (Platform.OS === 'web') {\n      const confirmation = window.confirm(`${title}: ${message}`);\n      if (confirmation) {\n        onRemove();\n      }\n    } else {\n      Alert.alert(title, message, [{\n        text: 'Cancel',\n        style: 'cancel'\n      }, {\n        text: 'Ok',\n        onPress: onRemove\n      }]);\n    }\n  };\n  const calculateDistance = (lat, lng) => {\n    const userLocation = {\n      latitude: lat,\n      longitude: lng\n    };\n    const distanceInMeters = haversine(SHOP_LOCATION, userLocation);\n    console.log(userLocation);\n    const distanceInKm = distanceInMeters / 1000;\n    setDistance(distanceInKm.toFixed(2));\n    if (distanceInKm > 5) {\n      Alert.alert('Out of Delivery Range', 'Sorry, delivery is only available within 5km.');\n    }\n  };\n  const openGoogleMaps = () => {\n    Linking.openURL('https://www.google.com/maps/search/?api=1&query=current+location');\n  };\n  const getCurrentLocation = async () => {\n    setLoadingLocation(true);\n    try {\n      let {\n        status\n      } = await Location.requestForegroundPermissionsAsync();\n      if (status !== 'granted') {\n        showAlert('Permission Denied', 'Allow location access to autofill your address.', () => {});\n        setLoadingLocation(false);\n        return;\n      }\n      let location = await Location.getCurrentPositionAsync({});\n      let {\n        latitude,\n        longitude\n      } = location.coords;\n      let geocode = await Location.reverseGeocodeAsync({\n        latitude,\n        longitude\n      });\n      if (geocode.length > 0) {\n        let formattedAddress = `${geocode[0].street}, ${geocode[0].city}, ${geocode[0].region}, ${geocode[0].country}`;\n        setAddress(formattedAddress);\n        calculateDistance(latitude, longitude);\n      }\n    } catch (error) {\n      console.error('Error fetching location:', error);\n      showAlert('Error', 'Unable to fetch your location. Try again.', () => {});\n    } finally {\n      setLoadingLocation(false);\n    }\n  };\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, user => {\n      setCurrentUser(user);\n    });\n    return () => unsubscribe();\n  }, []);\n  const handleRemove = id => {\n    showAlert('Remove Item', 'Are you sure you want to remove this item from your cart?', () => removeFromCart(id));\n  };\n  const sendOrderMessage = paymentType => {\n    const orderDetails = cart.map(item => `${item.name} x${item.cartQuantity}`).join(', ');\n    const message = `Order Details:\\nName: ${name}\\nContact: ${contactNumber}\\nProducts: ${orderDetails}\\nTotal Price: â‚¹${totalPrice.toFixed(2)}\\nPayment Method: ${paymentType}`;\n    Linking.openURL(`sms:${contactNumber}?body=${encodeURIComponent(message)}`);\n    Linking.openURL(`whatsapp://send?phone=${contactNumber}&text=${encodeURIComponent(message)}`);\n    const ownerNumber = '+916205720019';\n    Linking.openURL(`sms:${ownerNumber}?body=${encodeURIComponent(message)}`);\n    Linking.openURL(`whatsapp://send?phone=${ownerNumber}&text=${encodeURIComponent(message)}`);\n  };\n  const handleCheckout = () => {\n    if (!currentUser) {\n      showAlert('Authentication Required', 'You need to log in to proceed to checkout.', () => navigation.navigate('Login'));\n    } else if (!name || !contactNumber || !address) {\n      showAlert('Missing Information', 'Please provide your name , contact number and address.', () => {});\n    } else if (selectedPayment === 'Cash on Delivery') {\n      showAlert('Order Confirmed', 'Your order has been placed and will be paid on delivery.', () => {\n        sendOrderMessage('Cash on Delivery');\n      });\n    } else if (selectedPayment === 'Online Payment') {\n      navigation.navigate('OnlinePayment', {\n        name,\n        contactNumber,\n        totalPrice,\n        cart,\n        address\n      });\n      sendOrderMessage('Online Payment');\n    } else {\n      showAlert('Select Payment Method', 'Please choose a payment method to proceed.', () => {});\n    }\n  };\n  useEffect(() => {\n    Animated.timing(animatedHeight, {\n      toValue: isExpanded ? 300 : 0,\n      duration: 300,\n      useNativeDriver: false\n    }).start();\n  }, [isExpanded]);\n  const toggleExpand = () => {\n    setIsExpanded(prev => !prev);\n  };\n  const renderCartItem = ({\n    item\n  }) => _jsxDEV(View, {\n    style: styles.cartItem,\n    children: [_jsxDEV(Text, {\n      style: styles.itemText,\n      children: item.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 451,\n      columnNumber: 7\n    }, this), _jsxDEV(Text, {\n      style: styles.itemText,\n      children: [\"Quantity: \", item.cartQuantity]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 452,\n      columnNumber: 7\n    }, this), _jsxDEV(Text, {\n      style: styles.itemText,\n      children: [\"Price: \\u20B9\", item.price.toFixed(2)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 453,\n      columnNumber: 7\n    }, this), _jsxDEV(TouchableOpacity, {\n      onPress: () => handleRemove(item.id),\n      style: styles.removeButton,\n      children: _jsxDEV(Text, {\n        style: styles.removeButtonText,\n        children: \"Remove\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 455,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 454,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 450,\n    columnNumber: 5\n  }, this);\n  return _jsxDEV(View, {\n    style: styles.container,\n    children: [_jsxDEV(Text, {\n      style: styles.title,\n      children: \"Your Cart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 462,\n      columnNumber: 7\n    }, this), cart.length === 0 ? _jsxDEV(Text, {\n      style: styles.emptyCartText,\n      children: \"Your cart is empty.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 465,\n      columnNumber: 9\n    }, this) : _jsxDEV(_Fragment, {\n      children: [_jsxDEV(FlatList, {\n        data: cart,\n        renderItem: renderCartItem,\n        keyExtractor: item => item.id.toString()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 468,\n        columnNumber: 11\n      }, this), _jsxDEV(Animated.View, {\n        style: {\n          height: animatedHeight,\n          overflow: 'hidden'\n        },\n        children: _jsxDEV(FlatList, {\n          data: cart,\n          renderItem: renderCartItem,\n          keyExtractor: item => item.id.toString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 475,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 474,\n        columnNumber: 13\n      }, this), _jsxDEV(TouchableOpacity, {\n        onPress: toggleExpand,\n        style: styles.toggleButton,\n        children: _jsxDEV(Text, {\n          style: styles.toggleButtonText,\n          children: isExpanded ? 'View Less' : 'View All Items'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 482,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 481,\n        columnNumber: 13\n      }, this), _jsxDEV(View, {\n        style: styles.addressContainer,\n        children: [_jsxDEV(Text, {\n          style: styles.inputLabel,\n          children: \"Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 516,\n          columnNumber: 13\n        }, this), _jsxDEV(TextInput, {\n          style: styles.input,\n          value: name,\n          onChangeText: setName,\n          placeholder: \"Enter your name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 517,\n          columnNumber: 13\n        }, this), _jsxDEV(Text, {\n          style: styles.inputLabel,\n          children: \"Contact Number:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 523,\n          columnNumber: 13\n        }, this), _jsxDEV(TextInput, {\n          style: styles.input,\n          value: contactNumber,\n          onChangeText: setContactNumber,\n          placeholder: \"Enter your contact number\",\n          keyboardType: \"phone-pad\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 524,\n          columnNumber: 13\n        }, this), _jsxDEV(Text, {\n          style: styles.inputLabel,\n          children: \"Address:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 531,\n          columnNumber: 13\n        }, this), _jsxDEV(TextInput, {\n          style: styles.input,\n          value: address,\n          onChangeText: setAddress,\n          placeholder: \"Enter your address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 532,\n          columnNumber: 13\n        }, this), _jsxDEV(View, {\n          style: styles.buttonContainer,\n          children: [_jsxDEV(TouchableOpacity, {\n            style: styles.button,\n            onPress: getCurrentLocation,\n            children: loadingLocation ? _jsxDEV(ActivityIndicator, {\n              color: \"#fff\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 543,\n              columnNumber: 36\n            }, this) : _jsxDEV(Text, {\n              style: styles.buttonText,\n              children: \"Use Current Location\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 543,\n              columnNumber: 73\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 542,\n            columnNumber: 15\n          }, this), _jsxDEV(TouchableOpacity, {\n            style: styles.button,\n            onPress: openGoogleMaps,\n            children: _jsxDEV(Text, {\n              style: styles.buttonText,\n              children: \"Select from Map\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 546,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 545,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 541,\n          columnNumber: 13\n        }, this), distance && _jsxDEV(Text, {\n          style: styles.distanceText,\n          children: [\"Distance: \", distance, \" km\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 549,\n          columnNumber: 26\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 515,\n        columnNumber: 11\n      }, this), _jsxDEV(View, {\n        style: styles.paymentContainer,\n        children: [_jsxDEV(Text, {\n          style: styles.paymentTitle,\n          children: \"Select Payment Method:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 553,\n          columnNumber: 13\n        }, this), _jsxDEV(TouchableOpacity, {\n          style: [styles.paymentOption, selectedPayment === 'Cash on Delivery' && styles.selectedOption],\n          onPress: () => setSelectedPayment('Cash on Delivery'),\n          children: _jsxDEV(Text, {\n            style: styles.paymentText,\n            children: \"Cash on Delivery\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 561,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 554,\n          columnNumber: 13\n        }, this), _jsxDEV(TouchableOpacity, {\n          style: [styles.paymentOption, selectedPayment === 'Online Payment' && styles.selectedOption],\n          onPress: () => setSelectedPayment('Online Payment'),\n          children: _jsxDEV(Text, {\n            style: styles.paymentText,\n            children: \"Online Payment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 570,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 563,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 552,\n        columnNumber: 11\n      }, this), _jsxDEV(View, {\n        style: styles.summaryContainer,\n        children: [_jsxDEV(Text, {\n          style: styles.summaryText,\n          children: [\"Total Price: \\u20B9\", totalPrice.toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 574,\n          columnNumber: 13\n        }, this), _jsxDEV(TouchableOpacity, {\n          onPress: handleCheckout,\n          style: styles.checkoutButton,\n          children: _jsxDEV(Text, {\n            style: styles.checkoutButtonText,\n            children: \"Proceed to Checkout\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 576,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 575,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 573,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 461,\n    columnNumber: 5\n  }, this);\n}\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 20,\n    backgroundColor: '#f7f7f7'\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    textAlign: 'center',\n    marginBottom: 20\n  },\n  cartItem: {\n    marginBottom: 15,\n    borderBottomWidth: 1,\n    borderBottomColor: '#ddd',\n    paddingBottom: 10\n  },\n  itemText: {\n    fontSize: 16,\n    marginBottom: 5\n  },\n  removeButton: {\n    marginTop: 10,\n    backgroundColor: '#FF6347',\n    padding: 10,\n    borderRadius: 5\n  },\n  removeButtonText: {\n    color: '#fff',\n    textAlign: 'center'\n  },\n  emptyCartText: {\n    fontSize: 18,\n    color: 'gray',\n    textAlign: 'center',\n    marginTop: 20\n  },\n  showItemsButton: {\n    marginTop: 10,\n    backgroundColor: '#4CAF50',\n    padding: 10,\n    borderRadius: 5\n  },\n  showItemsText: {\n    color: '#fff',\n    textAlign: 'center',\n    fontSize: 16\n  },\n  addressContainer: {\n    marginVertical: 20\n  },\n  inputLabel: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    marginBottom: 5\n  },\n  input: {\n    borderWidth: 1,\n    borderColor: '#ccc',\n    borderRadius: 5,\n    padding: 10,\n    marginBottom: 10\n  },\n  paymentContainer: {\n    marginTop: 20,\n    padding: 10\n  },\n  paymentTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginBottom: 10\n  },\n  paymentOption: {\n    padding: 15,\n    marginVertical: 5,\n    borderRadius: 5,\n    borderWidth: 1,\n    borderColor: '#ddd'\n  },\n  selectedOption: {\n    borderColor: '#4CAF50',\n    backgroundColor: '#e8f5e9'\n  },\n  paymentText: {\n    fontSize: 16\n  },\n  summaryContainer: {\n    marginTop: 20,\n    padding: 15,\n    borderTopWidth: 1,\n    borderTopColor: '#ddd',\n    backgroundColor: '#fff',\n    borderRadius: 5\n  },\n  summaryText: {\n    fontSize: 18,\n    fontWeight: 'bold'\n  },\n  checkoutButton: {\n    marginTop: 10,\n    backgroundColor: '#FFA500',\n    padding: 15,\n    borderRadius: 5\n  },\n  checkoutButtonText: {\n    color: '#fff',\n    textAlign: 'center',\n    fontSize: 18\n  },\n  toggleButton: {\n    marginTop: 10,\n    backgroundColor: '#FFA500',\n    padding: 10,\n    borderRadius: 5\n  },\n  toggleButtonText: {\n    color: '#fff',\n    textAlign: 'center',\n    fontSize: 16\n  },\n  buttonContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginVertical: 0\n  },\n  button: {\n    flex: 1,\n    marginHorizontal: 5,\n    backgroundColor: '#FFA500',\n    padding: 4,\n    borderRadius: 5,\n    alignItems: 'center'\n  },\n  buttonText: {\n    color: '#fff',\n    fontSize: 14\n  },\n  distanceText: {\n    fontSize: 13,\n    fontWeight: 'bold',\n    color: 'red',\n    marginTop: 10,\n    textAlign: 'center'\n  }\n});","map":{"version":3,"names":["React","useEffect","useState","View","Text","FlatList","TouchableOpacity","StyleSheet","Alert","TextInput","Animated","ActivityIndicator","useCart","useNavigation","getFirestore","doc","getDoc","auth","onAuthStateChanged","Linking","Platform","Location","haversine","jsxDEV","_jsxDEV","Fragment","_Fragment","SHOP_LOCATION","latitude","longitude","CartScreen","cart","removeFromCart","totalPrice","currentUser","setCurrentUser","selectedPayment","setSelectedPayment","name","setName","contactNumber","setContactNumber","address","setAddress","isExpanded","setIsExpanded","animatedHeight","Value","navigation","userDetails","setUserDetails","distance","setDistance","loadingLocation","setLoadingLocation","fetchUserDetails","user","db","userDoc","uid","exists","data","mobile","error","console","showAlert","title","message","onRemove","OS","confirmation","window","confirm","alert","text","style","onPress","calculateDistance","lat","lng","userLocation","distanceInMeters","log","distanceInKm","toFixed","openGoogleMaps","openURL","getCurrentLocation","status","requestForegroundPermissionsAsync","location","getCurrentPositionAsync","coords","geocode","reverseGeocodeAsync","length","formattedAddress","street","city","region","country","unsubscribe","handleRemove","id","sendOrderMessage","paymentType","orderDetails","map","item","cartQuantity","join","encodeURIComponent","ownerNumber","handleCheckout","navigate","timing","toValue","duration","useNativeDriver","start","toggleExpand","prev","renderCartItem","styles","cartItem","children","itemText","fileName","_jsxFileName","lineNumber","columnNumber","price","removeButton","removeButtonText","container","emptyCartText","renderItem","keyExtractor","toString","height","overflow","toggleButton","toggleButtonText","addressContainer","inputLabel","input","value","onChangeText","placeholder","keyboardType","buttonContainer","button","color","buttonText","distanceText","paymentContainer","paymentTitle","paymentOption","selectedOption","paymentText","summaryContainer","summaryText","checkoutButton","checkoutButtonText","create","flex","padding","backgroundColor","fontSize","fontWeight","textAlign","marginBottom","borderBottomWidth","borderBottomColor","paddingBottom","marginTop","borderRadius","showItemsButton","showItemsText","marginVertical","borderWidth","borderColor","borderTopWidth","borderTopColor","flexDirection","justifyContent","marginHorizontal","alignItems"],"sources":["/Users/payalsah/Documents/FruitShopApp/screens/CartScreen.tsx"],"sourcesContent":["// import React, { useEffect, useState } from 'react';\n// import {\n//   View,\n//   Text,\n//   FlatList,\n//   TouchableOpacity,\n//   StyleSheet,\n//   Alert,\n// } from 'react-native';\n// import { useCart } from '../contexts/CartContext'; // Cart context\n// import { useNavigation } from '@react-navigation/native';\n// import { auth } from '../firebaseConfig';\n// import { onAuthStateChanged } from 'firebase/auth';\n// import { User } from 'firebase/auth';\n// import { RootStackParamList } from '../navigation/types';\n// import { NativeStackNavigationProp } from '@react-navigation/native-stack';\n\n\n// interface CartItem {\n//   id: number;\n//   name: string;\n//   price: number;\n//   cartQuantity: number;\n// }\n\n// type CartScreenNavigationProp = NativeStackNavigationProp<RootStackParamList, 'Cart'>;\n\n\n// export default function CartScreen() {\n//   const { cart, removeFromCart, totalPrice } = useCart(); // Cart context\n//   const [user, setUser] = useState(null); // Firebase auth state\n//   const [selectedPayment, setSelectedPayment] = useState<string | null>(null);\n//   const [currentUser, setCurrentUser] = useState<User | null>(null); // Allow User | null\n//   const navigation = useNavigation();\n\n//   useEffect(() => {\n//     const unsubscribe = onAuthStateChanged(auth, (user) => {\n//       setCurrentUser(user); // Sets the user if logged in\n//     });\n//     return () => unsubscribe(); // Cleanup subscription\n//   }, []);\n\n//   const handleRemove = (id: number) => {\n//     Alert.alert('Remove Item', 'Are you sure you want to remove this item from your cart?', [\n//       { text: 'Cancel', style: 'cancel' },\n//       { text: 'Remove', onPress: () => removeFromCart(id) },\n//     ]);\n//   };\n\n//   const handleCheckout = () => {\n//     if (!currentUser) {\n//       // If user not logged in, navigate to login\n//       Alert.alert(\n//         'Authentication Required',\n//         'You need to log in to proceed to checkout.',\n//         [\n//           { text: 'Cancel', style: 'cancel' },\n//           { text: 'Login', onPress: () => navigation.navigate('Login') },\n//         ]\n//       );\n//     } else if (selectedPayment === 'Online Payment') {\n//       // Navigate to online payment\n//       navigation.navigate('OnlinePayment'); // Replace with your Online Payment screen\n//     } else if (selectedPayment === 'Cash on Delivery') {\n//       // Confirm cash on delivery order\n//       Alert.alert('Order Confirmed', 'Your order will be paid on delivery.');\n//     } else {\n//       // No payment method selected\n//       Alert.alert('Select Payment Method', 'Please choose a payment method to proceed.');\n//     }\n//   };\n\n//   const renderCartItem = ({ item }: { item: CartItem }) => (\n//     <View style={styles.cartItem}>\n//       <Text style={styles.itemText}>{item.name}</Text>\n//       <Text style={styles.itemText}>Quantity: {item.cartQuantity}</Text>\n//       <Text style={styles.itemText}>Price: â‚¹{item.price.toFixed(2)}</Text>\n//       <TouchableOpacity onPress={() => handleRemove(item.id)} style={styles.removeButton}>\n//         <Text style={styles.removeButtonText}>Remove</Text>\n//       </TouchableOpacity>\n//     </View>\n//   );\n\n//   return (\n//     <View style={styles.container}>\n//       <Text style={styles.title}>Your Cart</Text>\n//       {cart.length === 0 ? (\n//         <Text style={styles.emptyCartText}>Your cart is empty.</Text>\n//       ) : (\n//         <>\n//           <FlatList\n//             data={cart}\n//             renderItem={renderCartItem}\n//             keyExtractor={(item) => item.id.toString()}\n//           />\n//           <View style={styles.paymentContainer}>\n//             <Text style={styles.paymentTitle}>Select Payment Method:</Text>\n//             <TouchableOpacity\n//               style={[\n//                 styles.paymentOption,\n//                 selectedPayment === 'Cash on Delivery' && styles.selectedOption,\n//               ]}\n//               onPress={() => setSelectedPayment('Cash on Delivery')}\n//             >\n//               <Text style={styles.paymentText}>Cash on Delivery</Text>\n//             </TouchableOpacity>\n//             <TouchableOpacity\n//               style={[\n//                 styles.paymentOption,\n//                 selectedPayment === 'Online Payment' && styles.selectedOption,\n//               ]}\n//               onPress={() => setSelectedPayment('Online Payment')}\n//             >\n//               <Text style={styles.paymentText}>Online Payment</Text>\n//             </TouchableOpacity>\n//           </View>\n//           <View style={styles.summaryContainer}>\n//             <Text style={styles.summaryText}>Total Price: â‚¹{totalPrice.toFixed(2)}</Text>\n//             <TouchableOpacity onPress={handleCheckout} style={styles.checkoutButton}>\n//               <Text style={styles.checkoutButtonText}>Proceed to Checkout</Text>\n//             </TouchableOpacity>\n//           </View>\n//         </>\n//       )}\n//     </View>\n//   );\n// }\n\n// const styles = StyleSheet.create({\n//   container: {\n//     flex: 1,\n//     padding: 20,\n//     backgroundColor: '#f7f7f7',\n//   },\n//   title: {\n//     fontSize: 24,\n//     fontWeight: 'bold',\n//     textAlign: 'center',\n//     marginBottom: 20,\n//   },\n//   cartItem: {\n//     marginBottom: 15,\n//     borderBottomWidth: 1,\n//     borderBottomColor: '#ddd',\n//     paddingBottom: 10,\n//   },\n//   itemText: {\n//     fontSize: 16,\n//     marginBottom: 5,\n//   },\n//   removeButton: {\n//     marginTop: 10,\n//     backgroundColor: '#FF6347',\n//     padding: 10,\n//     borderRadius: 5,\n//   },\n//   removeButtonText: {\n//     color: '#fff',\n//     textAlign: 'center',\n//   },\n//   emptyCartText: {\n//     fontSize: 18,\n//     color: 'gray',\n//     textAlign: 'center',\n//     marginTop: 20,\n//   },\n//   paymentContainer: {\n//     marginTop: 20,\n//     padding: 10,\n//   },\n//   paymentTitle: {\n//     fontSize: 18,\n//     fontWeight: 'bold',\n//     marginBottom: 10,\n//   },\n//   paymentOption: {\n//     padding: 15,\n//     marginVertical: 5,\n//     borderRadius: 5,\n//     borderWidth: 1,\n//     borderColor: '#ddd',\n//   },\n//   selectedOption: {\n//     borderColor: '#4CAF50',\n//     backgroundColor: '#e8f5e9',\n//   },\n//   paymentText: {\n//     fontSize: 16,\n//   },\n//   summaryContainer: {\n//     marginTop: 20,\n//     padding: 15,\n//     borderTopWidth: 1,\n//     borderTopColor: '#ddd',\n//     backgroundColor: '#fff',\n//     borderRadius: 5,\n//   },\n//   summaryText: {\n//     fontSize: 18,\n//     fontWeight: 'bold',\n//   },\n//   checkoutButton: {\n//     marginTop: 10,\n//     backgroundColor: '#4CAF50',\n//     padding: 15,\n//     borderRadius: 5,\n//   },\n//   checkoutButtonText: {\n//     color: '#fff',\n//     textAlign: 'center',\n//     fontSize: 18,\n//   },\n// });\n\n\n\nimport React, { useContext ,useEffect, useState  } from 'react';\nimport {\n  View,\n  Text,\n  FlatList,\n  TouchableOpacity,\n  StyleSheet,\n  Alert,\n  TextInput,\n  // Modal,\n  ScrollView,\n  Animated,\n  ActivityIndicator\n} from 'react-native';\nimport { useCart } from '../contexts/CartContext'; // Cart context\nimport { useNavigation } from '@react-navigation/native';\nimport { getFirestore, doc, getDoc } from 'firebase/firestore';\nimport { auth } from '../firebaseConfig';\nimport { onAuthStateChanged } from 'firebase/auth';\nimport { User } from 'firebase/auth';\nimport { RootStackParamList } from '../navigation/types';\nimport { NativeStackNavigationProp } from '@react-navigation/native-stack';\nimport * as Linking from 'expo-linking';\nimport { Platform } from 'react-native';\nimport * as Location from 'expo-location';\nimport haversine from 'haversine-distance';\n\n\n// Owner's Fixed Address (Fruit Shop Location)\nconst SHOP_LOCATION = {\n  latitude: 25.5437, // Katihar , Bihar\n  longitude: 87.5716,\n};\n\nexport interface CartItem {\n  id: number;\n  name: string;\n  price: number;\n  cartQuantity: number;\n}\n\ntype CartScreenNavigationProp = NativeStackNavigationProp<RootStackParamList, 'Cart'>;\n\nexport default function CartScreen() {\n  const { cart, removeFromCart, totalPrice } = useCart(); // Cart context\n  const [currentUser, setCurrentUser] = useState<User | null>(null); // Firebase auth state\n  const [selectedPayment, setSelectedPayment] = useState<string | null>(null);\n  const [name, setName] = useState('');\n  const [contactNumber, setContactNumber] = useState('');\n  const [address, setAddress] = useState('');\n  // const [isModalVisible, setModalVisible] = useState(false); // Modal visibility state\n  const [isExpanded, setIsExpanded] = useState(true); // State to track if the list is expanded\n  const [animatedHeight] = useState(new Animated.Value(0)); // Animated value for height transition\n  const navigation = useNavigation<CartScreenNavigationProp>();\n\n  const [userDetails, setUserDetails] = useState<any>(null); \n  const [distance, setDistance] = useState<any>(null);\n  const [loadingLocation, setLoadingLocation] = useState(false);\n\n  // Fetch user details (including address if available)\n  useEffect(() => {\n    const fetchUserDetails = async () => {\n      const user = auth.currentUser;\n      if (user) {\n        try {\n          const db = getFirestore();\n          const userDoc = await getDoc(doc(db, 'users', user.uid));\n          if (userDoc.exists()) {\n            setUserDetails(userDoc.data());\n            setAddress(userDoc.data().address || ''); // Set saved address\n            setName(userDoc.data().name || '');\n            setContactNumber(userDoc.data().mobile || '');\n          }\n        } catch (error) {\n          console.error('Error fetching user details: ', error);\n        }\n      }\n    };\n    fetchUserDetails();\n  }, []);\n\n\n  const showAlert = (title: string, message: string, onRemove: () => void) => {\n    if (Platform.OS === 'web') {\n      const confirmation = window.confirm(`${title}: ${message}`);\n      if (confirmation) {\n        onRemove();\n      }\n    } else {\n      Alert.alert(\n        title,\n        message,\n        [\n          { text: 'Cancel', style: 'cancel' },\n          { text: 'Ok', onPress: onRemove },\n        ]\n      );\n    }\n  };\n\n\n  const calculateDistance = (lat:number, lng:number) => {\n    const userLocation = { latitude: lat, longitude: lng };\n    const distanceInMeters = haversine(SHOP_LOCATION, userLocation);\n    console.log(userLocation)\n    const distanceInKm = distanceInMeters / 1000;\n    setDistance(distanceInKm.toFixed(2));\n\n    if (distanceInKm > 5) {\n      Alert.alert('Out of Delivery Range', 'Sorry, delivery is only available within 5km.');\n    }\n  };\n\n  const openGoogleMaps = () => {\n    Linking.openURL('https://www.google.com/maps/search/?api=1&query=current+location');\n  };\n\n\n// Get User's Current Location\nconst getCurrentLocation = async () => {\n  setLoadingLocation(true);\n  try {\n    // Request permission\n    let { status } = await Location.requestForegroundPermissionsAsync();\n    if (status !== 'granted') {\n      showAlert('Permission Denied', 'Allow location access to autofill your address.' , () => {});\n      setLoadingLocation(false);\n      return;\n    }\n\n    // Get current location\n    let location = await Location.getCurrentPositionAsync({});\n    let { latitude, longitude } = location.coords;\n\n    // Reverse geocoding to get address\n    let geocode = await Location.reverseGeocodeAsync({ latitude, longitude });\n\n    if (geocode.length > 0) {\n      let formattedAddress = `${geocode[0].street}, ${geocode[0].city}, ${geocode[0].region}, ${geocode[0].country}`;\n      setAddress(formattedAddress);\n      calculateDistance(latitude, longitude);\n    }\n  } catch (error) {\n    console.error('Error fetching location:', error);\n    showAlert('Error', 'Unable to fetch your location. Try again.' , () => {});\n  } finally {\n    setLoadingLocation(false);\n  }\n};\n\n\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, (user) => {\n      setCurrentUser(user); // Sets the user if logged in\n    });\n    return () => unsubscribe(); // Cleanup subscription\n  }, []);\n\n  const handleRemove = (id: number) => {\n    showAlert('Remove Item', 'Are you sure you want to remove this item from your cart?', () => removeFromCart(id));\n  };\n\n  const sendOrderMessage = (paymentType: string) => {\n    const orderDetails = cart\n      .map((item) => `${item.name} x${item.cartQuantity}`)\n      .join(', ');\n    const message = `Order Details:\\nName: ${name}\\nContact: ${contactNumber}\\nProducts: ${orderDetails}\\nTotal Price: â‚¹${totalPrice.toFixed(\n      2\n    )}\\nPayment Method: ${paymentType}`;\n\n\n    // Send message to the customer\n    Linking.openURL(`sms:${contactNumber}?body=${encodeURIComponent(message)}`);\n    Linking.openURL(`whatsapp://send?phone=${contactNumber}&text=${encodeURIComponent(message)}`);\n\n    // Send message to the owner\n    const ownerNumber = '+916205720019';\n    Linking.openURL(`sms:${ownerNumber}?body=${encodeURIComponent(message)}`);\n    Linking.openURL(`whatsapp://send?phone=${ownerNumber}&text=${encodeURIComponent(message)}`);\n  \n\n  };\n\n  const handleCheckout = () => {\n    if (!currentUser) {\n      // If user not logged in, navigate to login\n      showAlert(\n        'Authentication Required',\n        'You need to log in to proceed to checkout.',\n        () => navigation.navigate('Login')\n      );\n    } else if (!name || !contactNumber || !address) {\n      showAlert('Missing Information', 'Please provide your name , contact number and address.' , () => {});\n    } else if (selectedPayment === 'Cash on Delivery') {\n      // Confirm Cash on Delivery order\n      showAlert('Order Confirmed', 'Your order has been placed and will be paid on delivery.', () => {\n        sendOrderMessage('Cash on Delivery'); // âœ… Automatically send message after confirming order\n      });      \n    } else if (selectedPayment === 'Online Payment') {\n      // Navigate to Online Payment\n      navigation.navigate('OnlinePayment', {\n        name,\n        contactNumber,\n        totalPrice,\n        cart,\n        address,\n      });\n      sendOrderMessage('Online Payment'); // âœ… Automatically send message for online payment\n    } else {\n      showAlert('Select Payment Method', 'Please choose a payment method to proceed.' , () => {});\n    }\n  };\n\n  // const toggleModal = () => {\n  //   setModalVisible(!isModalVisible);\n  // };\n\n  useEffect(() => {\n    // Animate the height change\n    Animated.timing(animatedHeight, {\n      toValue: isExpanded ? 300 : 0, // Adjust the height value as needed\n      duration: 300,\n      useNativeDriver: false,\n    }).start();\n  }, [isExpanded]);\n\n  const toggleExpand = () => {\n    setIsExpanded((prev) => !prev);\n  };\n\n\n\n  const renderCartItem = ({ item }: { item: CartItem }) => (\n    <View style={styles.cartItem}>\n      <Text style={styles.itemText}>{item.name}</Text>\n      <Text style={styles.itemText}>Quantity: {item.cartQuantity}</Text>\n      <Text style={styles.itemText}>Price: â‚¹{item.price.toFixed(2)}</Text>\n      <TouchableOpacity onPress={() => handleRemove(item.id)} style={styles.removeButton}>\n        <Text style={styles.removeButtonText}>Remove</Text>\n      </TouchableOpacity>\n    </View>\n  );\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>Your Cart</Text>\n      \n      {cart.length === 0 ? (\n        <Text style={styles.emptyCartText}>Your cart is empty.</Text>\n      ) : (\n        <>\n          <FlatList\n            data={cart}\n            renderItem={renderCartItem}\n            keyExtractor={(item) => item.id.toString()}\n          />\n\n            <Animated.View style={{ height: animatedHeight, overflow: 'hidden' }}>\n              <FlatList\n                data={cart} // Show the remaining items in the expanded section\n                renderItem={renderCartItem}\n                keyExtractor={(item) => item.id.toString()}\n              />\n            </Animated.View>\n            <TouchableOpacity onPress={toggleExpand} style={styles.toggleButton}>\n              <Text style={styles.toggleButtonText}>{isExpanded ? 'View Less' : 'View All Items'}</Text>\n            </TouchableOpacity>\n\n          {/* <TouchableOpacity onPress={toggleModal} style={styles.showItemsButton}>\n            <Text style={styles.showItemsText}>View All Items</Text>\n          </TouchableOpacity> */}\n\n          {/* Modal for displaying all cart items */}\n          {/* <Modal\n            visible={isModalVisible}\n            transparent={true}\n            animationType=\"slide\"\n            onRequestClose={toggleModal}\n          >\n            <View style={styles.modalContainer}>\n              <View style={styles.modalContent}>\n                <Text style={styles.modalTitle}>Cart Items</Text>\n                <ScrollView>\n                  {cart.map((item) => (\n                    <View key={item.id} style={styles.modalItem}>\n                      <Text style={styles.itemText}>{item.name}</Text>\n                      <Text style={styles.itemText}>Quantity: {item.cartQuantity}</Text>\n                      <Text style={styles.itemText}>Price: â‚¹{item.price.toFixed(2)}</Text>\n                    </View>\n                  ))}\n                </ScrollView>\n                <TouchableOpacity onPress={toggleModal} style={styles.closeModalButton}>\n                  <Text style={styles.closeModalText}>Close</Text>\n                </TouchableOpacity>\n              </View>\n            </View>\n          </Modal> */}\n          \n          <View style={styles.addressContainer}>\n            <Text style={styles.inputLabel}>Name:</Text>\n            <TextInput\n              style={styles.input}\n              value={name}\n              onChangeText={setName}\n              placeholder=\"Enter your name\"\n            />\n            <Text style={styles.inputLabel}>Contact Number:</Text>\n            <TextInput\n              style={styles.input}\n              value={contactNumber}\n              onChangeText={setContactNumber}\n              placeholder=\"Enter your contact number\"\n              keyboardType=\"phone-pad\"\n            />\n            <Text style={styles.inputLabel}>Address:</Text>\n            <TextInput\n              style={styles.input}\n              value={address}\n              onChangeText={setAddress}\n              placeholder=\"Enter your address\"\n              // returnKeyType=\"done\"\n              // onSubmitEditing={() => Keyboard.dismiss()}\n            />\n\n            <View style={styles.buttonContainer}>\n              <TouchableOpacity style={styles.button} onPress={getCurrentLocation}>\n                {loadingLocation ? <ActivityIndicator color=\"#fff\" /> : <Text style={styles.buttonText}>Use Current Location</Text>}\n              </TouchableOpacity>\n              <TouchableOpacity style={styles.button} onPress={openGoogleMaps}>\n                <Text style={styles.buttonText}>Select from Map</Text>\n              </TouchableOpacity>\n            </View>\n            {distance && <Text style={styles.distanceText}>Distance: {distance} km</Text>}\n            \n          </View>\n          <View style={styles.paymentContainer}>\n            <Text style={styles.paymentTitle}>Select Payment Method:</Text>\n            <TouchableOpacity\n              style={[\n                styles.paymentOption,\n                selectedPayment === 'Cash on Delivery' && styles.selectedOption,\n              ]}\n              onPress={() => setSelectedPayment('Cash on Delivery')}\n            >\n              <Text style={styles.paymentText}>Cash on Delivery</Text>\n            </TouchableOpacity>\n            <TouchableOpacity\n              style={[\n                styles.paymentOption,\n                selectedPayment === 'Online Payment' && styles.selectedOption,\n              ]}\n              onPress={() => setSelectedPayment('Online Payment')}\n            >\n              <Text style={styles.paymentText}>Online Payment</Text>\n            </TouchableOpacity>\n          </View>\n          <View style={styles.summaryContainer}>\n            <Text style={styles.summaryText}>Total Price: â‚¹{totalPrice.toFixed(2)}</Text>\n            <TouchableOpacity onPress={handleCheckout} style={styles.checkoutButton}>\n              <Text style={styles.checkoutButtonText}>Proceed to Checkout</Text>\n            </TouchableOpacity>\n          </View>\n        </>\n      )}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: { flex: 1, padding: 20, backgroundColor: '#f7f7f7' },\n  title: { fontSize: 24, fontWeight: 'bold', textAlign: 'center', marginBottom: 20 },\n  cartItem: { marginBottom: 15, borderBottomWidth: 1, borderBottomColor: '#ddd', paddingBottom: 10 },\n  itemText: { fontSize: 16, marginBottom: 5 },\n  removeButton: { marginTop: 10, backgroundColor: '#FF6347', padding: 10, borderRadius: 5 },\n  removeButtonText: { color: '#fff', textAlign: 'center' },\n  emptyCartText: { fontSize: 18, color: 'gray', textAlign: 'center', marginTop: 20 },\n  showItemsButton: { marginTop: 10, backgroundColor: '#4CAF50', padding: 10, borderRadius: 5 },\n  showItemsText: { color: '#fff', textAlign: 'center', fontSize: 16 },\n  // modalContainer: { flex: 1, justifyContent: 'center', backgroundColor: 'rgba(0,0,0,0.5)' },\n  // modalContent: { backgroundColor: '#fff', padding: 20, marginHorizontal: 20, borderRadius: 10 },\n  // modalTitle: { fontSize: 20, fontWeight: 'bold', marginBottom: 10, textAlign: 'center' },\n  // modalItem: { marginBottom: 15, borderBottomWidth: 1, borderBottomColor: '#ddd', paddingBottom: 10 },\n  // closeModalButton: { marginTop: 10, backgroundColor: '#FF6347', padding: 10, borderRadius: 5 },\n  // closeModalText: { color: '#fff', textAlign: 'center', fontSize: 16 },\n  addressContainer: { marginVertical: 20 },\n  inputLabel: { fontSize: 16, fontWeight: 'bold', marginBottom: 5 },\n  input: { borderWidth: 1, borderColor: '#ccc', borderRadius: 5, padding: 10, marginBottom: 10 },\n  paymentContainer: { marginTop: 20, padding: 10 },\n  paymentTitle: { fontSize: 18, fontWeight: 'bold', marginBottom: 10 },\n  paymentOption: { padding: 15, marginVertical: 5, borderRadius: 5, borderWidth: 1, borderColor: '#ddd' },\n  selectedOption: { borderColor: '#4CAF50', backgroundColor: '#e8f5e9' },\n  paymentText: { fontSize: 16 },\n  summaryContainer: { marginTop: 20, padding: 15, borderTopWidth: 1, borderTopColor: '#ddd', backgroundColor: '#fff', borderRadius: 5 },\n  summaryText: { fontSize: 18, fontWeight: 'bold' },\n  checkoutButton: { marginTop: 10, backgroundColor: '#FFA500', padding: 15, borderRadius: 5 },\n  checkoutButtonText: { color: '#fff', textAlign: 'center', fontSize: 18 },\n  toggleButton: { marginTop: 10, backgroundColor: '#FFA500', padding: 10, borderRadius: 5 },\n  toggleButtonText: { color: '#fff', textAlign: 'center', fontSize: 16 },\n  buttonContainer: { flexDirection: 'row', justifyContent: 'space-between', marginVertical: 0 },\n  button: { flex: 1, marginHorizontal: 5, backgroundColor: '#FFA500', padding: 4, borderRadius: 5, alignItems: 'center' },\n  buttonText: { color: '#fff', fontSize: 14 },\n  distanceText: { fontSize: 13, fontWeight: 'bold', color: 'red', marginTop: 10, textAlign: 'center' },\n\n});\n\n\n"],"mappings":";AAwNA,OAAOA,KAAK,IAAgBC,SAAS,EAAEC,QAAQ,QAAS,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,QAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,KAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,QAAA;AAAA,OAAAC,iBAAA;AAchE,SAASC,OAAO,QAAQ,yBAAyB;AACjD,SAASC,aAAa,QAAQ,0BAA0B;AACxD,SAASC,YAAY,EAAEC,GAAG,EAAEC,MAAM,QAAQ,oBAAoB;AAC9D,SAASC,IAAI,QAAQ,mBAAmB;AACxC,SAASC,kBAAkB,QAAQ,eAAe;AAIlD,OAAO,KAAKC,OAAO,MAAM,cAAc;AAAC,OAAAC,QAAA;AAExC,OAAO,KAAKC,QAAQ,MAAM,eAAe;AACzC,OAAOC,SAAS,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAI3C,MAAMC,aAAa,GAAG;EACpBC,QAAQ,EAAE,OAAO;EACjBC,SAAS,EAAE;AACb,CAAC;AAWD,eAAe,SAASC,UAAUA,CAAA,EAAG;EACnC,MAAM;IAAEC,IAAI;IAAEC,cAAc;IAAEC;EAAW,CAAC,GAAGrB,OAAO,CAAC,CAAC;EACtD,MAAM,CAACsB,WAAW,EAAEC,cAAc,CAAC,GAAGjC,QAAQ,CAAc,IAAI,CAAC;EACjE,MAAM,CAACkC,eAAe,EAAEC,kBAAkB,CAAC,GAAGnC,QAAQ,CAAgB,IAAI,CAAC;EAC3E,MAAM,CAACoC,IAAI,EAAEC,OAAO,CAAC,GAAGrC,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACsC,aAAa,EAAEC,gBAAgB,CAAC,GAAGvC,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACwC,OAAO,EAAEC,UAAU,CAAC,GAAGzC,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAM,CAAC0C,UAAU,EAAEC,aAAa,CAAC,GAAG3C,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAM,CAAC4C,cAAc,CAAC,GAAG5C,QAAQ,CAAC,IAAIQ,QAAQ,CAACqC,KAAK,CAAC,CAAC,CAAC,CAAC;EACxD,MAAMC,UAAU,GAAGnC,aAAa,CAA2B,CAAC;EAE5D,MAAM,CAACoC,WAAW,EAAEC,cAAc,CAAC,GAAGhD,QAAQ,CAAM,IAAI,CAAC;EACzD,MAAM,CAACiD,QAAQ,EAAEC,WAAW,CAAC,GAAGlD,QAAQ,CAAM,IAAI,CAAC;EACnD,MAAM,CAACmD,eAAe,EAAEC,kBAAkB,CAAC,GAAGpD,QAAQ,CAAC,KAAK,CAAC;EAG7DD,SAAS,CAAC,MAAM;IACd,MAAMsD,gBAAgB,GAAG,MAAAA,CAAA,KAAY;MACnC,MAAMC,IAAI,GAAGvC,IAAI,CAACiB,WAAW;MAC7B,IAAIsB,IAAI,EAAE;QACR,IAAI;UACF,MAAMC,EAAE,GAAG3C,YAAY,CAAC,CAAC;UACzB,MAAM4C,OAAO,GAAG,MAAM1C,MAAM,CAACD,GAAG,CAAC0C,EAAE,EAAE,OAAO,EAAED,IAAI,CAACG,GAAG,CAAC,CAAC;UACxD,IAAID,OAAO,CAACE,MAAM,CAAC,CAAC,EAAE;YACpBV,cAAc,CAACQ,OAAO,CAACG,IAAI,CAAC,CAAC,CAAC;YAC9BlB,UAAU,CAACe,OAAO,CAACG,IAAI,CAAC,CAAC,CAACnB,OAAO,IAAI,EAAE,CAAC;YACxCH,OAAO,CAACmB,OAAO,CAACG,IAAI,CAAC,CAAC,CAACvB,IAAI,IAAI,EAAE,CAAC;YAClCG,gBAAgB,CAACiB,OAAO,CAACG,IAAI,CAAC,CAAC,CAACC,MAAM,IAAI,EAAE,CAAC;UAC/C;QACF,CAAC,CAAC,OAAOC,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;QACvD;MACF;IACF,CAAC;IACDR,gBAAgB,CAAC,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;EAGN,MAAMU,SAAS,GAAGA,CAACC,KAAa,EAAEC,OAAe,EAAEC,QAAoB,KAAK;IAC1E,IAAIhD,QAAQ,CAACiD,EAAE,KAAK,KAAK,EAAE;MACzB,MAAMC,YAAY,GAAGC,MAAM,CAACC,OAAO,CAAC,GAAGN,KAAK,KAAKC,OAAO,EAAE,CAAC;MAC3D,IAAIG,YAAY,EAAE;QAChBF,QAAQ,CAAC,CAAC;MACZ;IACF,CAAC,MAAM;MACL5D,KAAK,CAACiE,KAAK,CACTP,KAAK,EACLC,OAAO,EACP,CACE;QAAEO,IAAI,EAAE,QAAQ;QAAEC,KAAK,EAAE;MAAS,CAAC,EACnC;QAAED,IAAI,EAAE,IAAI;QAAEE,OAAO,EAAER;MAAS,CAAC,CAErC,CAAC;IACH;EACF,CAAC;EAGD,MAAMS,iBAAiB,GAAGA,CAACC,GAAU,EAAEC,GAAU,KAAK;IACpD,MAAMC,YAAY,GAAG;MAAEpD,QAAQ,EAAEkD,GAAG;MAAEjD,SAAS,EAAEkD;IAAI,CAAC;IACtD,MAAME,gBAAgB,GAAG3D,SAAS,CAACK,aAAa,EAAEqD,YAAY,CAAC;IAC/DhB,OAAO,CAACkB,GAAG,CAACF,YAAY,CAAC;IACzB,MAAMG,YAAY,GAAGF,gBAAgB,GAAG,IAAI;IAC5C7B,WAAW,CAAC+B,YAAY,CAACC,OAAO,CAAC,CAAC,CAAC,CAAC;IAEpC,IAAID,YAAY,GAAG,CAAC,EAAE;MACpB3E,KAAK,CAACiE,KAAK,CAAC,uBAAuB,EAAE,+CAA+C,CAAC;IACvF;EACF,CAAC;EAED,MAAMY,cAAc,GAAGA,CAAA,KAAM;IAC3BlE,OAAO,CAACmE,OAAO,CAAC,kEAAkE,CAAC;EACrF,CAAC;EAIH,MAAMC,kBAAkB,GAAG,MAAAA,CAAA,KAAY;IACrCjC,kBAAkB,CAAC,IAAI,CAAC;IACxB,IAAI;MAEF,IAAI;QAAEkC;MAAO,CAAC,GAAG,MAAMnE,QAAQ,CAACoE,iCAAiC,CAAC,CAAC;MACnE,IAAID,MAAM,KAAK,SAAS,EAAE;QACxBvB,SAAS,CAAC,mBAAmB,EAAE,iDAAiD,EAAG,MAAM,CAAC,CAAC,CAAC;QAC5FX,kBAAkB,CAAC,KAAK,CAAC;QACzB;MACF;MAGA,IAAIoC,QAAQ,GAAG,MAAMrE,QAAQ,CAACsE,uBAAuB,CAAC,CAAC,CAAC,CAAC;MACzD,IAAI;QAAE/D,QAAQ;QAAEC;MAAU,CAAC,GAAG6D,QAAQ,CAACE,MAAM;MAG7C,IAAIC,OAAO,GAAG,MAAMxE,QAAQ,CAACyE,mBAAmB,CAAC;QAAElE,QAAQ;QAAEC;MAAU,CAAC,CAAC;MAEzE,IAAIgE,OAAO,CAACE,MAAM,GAAG,CAAC,EAAE;QACtB,IAAIC,gBAAgB,GAAG,GAAGH,OAAO,CAAC,CAAC,CAAC,CAACI,MAAM,KAAKJ,OAAO,CAAC,CAAC,CAAC,CAACK,IAAI,KAAKL,OAAO,CAAC,CAAC,CAAC,CAACM,MAAM,KAAKN,OAAO,CAAC,CAAC,CAAC,CAACO,OAAO,EAAE;QAC9GzD,UAAU,CAACqD,gBAAgB,CAAC;QAC5BnB,iBAAiB,CAACjD,QAAQ,EAAEC,SAAS,CAAC;MACxC;IACF,CAAC,CAAC,OAAOkC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAChDE,SAAS,CAAC,OAAO,EAAE,2CAA2C,EAAG,MAAM,CAAC,CAAC,CAAC;IAC5E,CAAC,SAAS;MACRX,kBAAkB,CAAC,KAAK,CAAC;IAC3B;EACF,CAAC;EAGCrD,SAAS,CAAC,MAAM;IACd,MAAMoG,WAAW,GAAGnF,kBAAkB,CAACD,IAAI,EAAGuC,IAAI,IAAK;MACrDrB,cAAc,CAACqB,IAAI,CAAC;IACtB,CAAC,CAAC;IACF,OAAO,MAAM6C,WAAW,CAAC,CAAC;EAC5B,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,YAAY,GAAIC,EAAU,IAAK;IACnCtC,SAAS,CAAC,aAAa,EAAE,2DAA2D,EAAE,MAAMjC,cAAc,CAACuE,EAAE,CAAC,CAAC;EACjH,CAAC;EAED,MAAMC,gBAAgB,GAAIC,WAAmB,IAAK;IAChD,MAAMC,YAAY,GAAG3E,IAAI,CACtB4E,GAAG,CAAEC,IAAI,IAAK,GAAGA,IAAI,CAACtE,IAAI,KAAKsE,IAAI,CAACC,YAAY,EAAE,CAAC,CACnDC,IAAI,CAAC,IAAI,CAAC;IACb,MAAM3C,OAAO,GAAG,yBAAyB7B,IAAI,cAAcE,aAAa,eAAekE,YAAY,mBAAmBzE,UAAU,CAACmD,OAAO,CACtI,CACF,CAAC,qBAAqBqB,WAAW,EAAE;IAInCtF,OAAO,CAACmE,OAAO,CAAC,OAAO9C,aAAa,SAASuE,kBAAkB,CAAC5C,OAAO,CAAC,EAAE,CAAC;IAC3EhD,OAAO,CAACmE,OAAO,CAAC,yBAAyB9C,aAAa,SAASuE,kBAAkB,CAAC5C,OAAO,CAAC,EAAE,CAAC;IAG7F,MAAM6C,WAAW,GAAG,eAAe;IACnC7F,OAAO,CAACmE,OAAO,CAAC,OAAO0B,WAAW,SAASD,kBAAkB,CAAC5C,OAAO,CAAC,EAAE,CAAC;IACzEhD,OAAO,CAACmE,OAAO,CAAC,yBAAyB0B,WAAW,SAASD,kBAAkB,CAAC5C,OAAO,CAAC,EAAE,CAAC;EAG7F,CAAC;EAED,MAAM8C,cAAc,GAAGA,CAAA,KAAM;IAC3B,IAAI,CAAC/E,WAAW,EAAE;MAEhB+B,SAAS,CACP,yBAAyB,EACzB,4CAA4C,EAC5C,MAAMjB,UAAU,CAACkE,QAAQ,CAAC,OAAO,CACnC,CAAC;IACH,CAAC,MAAM,IAAI,CAAC5E,IAAI,IAAI,CAACE,aAAa,IAAI,CAACE,OAAO,EAAE;MAC9CuB,SAAS,CAAC,qBAAqB,EAAE,wDAAwD,EAAG,MAAM,CAAC,CAAC,CAAC;IACvG,CAAC,MAAM,IAAI7B,eAAe,KAAK,kBAAkB,EAAE;MAEjD6B,SAAS,CAAC,iBAAiB,EAAE,0DAA0D,EAAE,MAAM;QAC7FuC,gBAAgB,CAAC,kBAAkB,CAAC;MACtC,CAAC,CAAC;IACJ,CAAC,MAAM,IAAIpE,eAAe,KAAK,gBAAgB,EAAE;MAE/CY,UAAU,CAACkE,QAAQ,CAAC,eAAe,EAAE;QACnC5E,IAAI;QACJE,aAAa;QACbP,UAAU;QACVF,IAAI;QACJW;MACF,CAAC,CAAC;MACF8D,gBAAgB,CAAC,gBAAgB,CAAC;IACpC,CAAC,MAAM;MACLvC,SAAS,CAAC,uBAAuB,EAAE,4CAA4C,EAAG,MAAM,CAAC,CAAC,CAAC;IAC7F;EACF,CAAC;EAMDhE,SAAS,CAAC,MAAM;IAEdS,QAAQ,CAACyG,MAAM,CAACrE,cAAc,EAAE;MAC9BsE,OAAO,EAAExE,UAAU,GAAG,GAAG,GAAG,CAAC;MAC7ByE,QAAQ,EAAE,GAAG;MACbC,eAAe,EAAE;IACnB,CAAC,CAAC,CAACC,KAAK,CAAC,CAAC;EACZ,CAAC,EAAE,CAAC3E,UAAU,CAAC,CAAC;EAEhB,MAAM4E,YAAY,GAAGA,CAAA,KAAM;IACzB3E,aAAa,CAAE4E,IAAI,IAAK,CAACA,IAAI,CAAC;EAChC,CAAC;EAID,MAAMC,cAAc,GAAGA,CAAC;IAAEd;EAAyB,CAAC,KAClDpF,OAAA,CAACrB,IAAI;IAACwE,KAAK,EAAEgD,MAAM,CAACC,QAAS;IAAAC,QAAA,GAC3BrG,OAAA,CAACpB,IAAI;MAACuE,KAAK,EAAEgD,MAAM,CAACG,QAAS;MAAAD,QAAA,EAAEjB,IAAI,CAACtE;IAAI;MAAAyF,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,EAChD1G,OAAA,CAACpB,IAAI;MAACuE,KAAK,EAAEgD,MAAM,CAACG,QAAS;MAAAD,QAAA,GAAC,YAAU,EAACjB,IAAI,CAACC,YAAY;IAAA;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,EAClE1G,OAAA,CAACpB,IAAI;MAACuE,KAAK,EAAEgD,MAAM,CAACG,QAAS;MAAAD,QAAA,GAAC,eAAQ,EAACjB,IAAI,CAACuB,KAAK,CAAC/C,OAAO,CAAC,CAAC,CAAC;IAAA;MAAA2C,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,EACpE1G,OAAA,CAAClB,gBAAgB;MAACsE,OAAO,EAAEA,CAAA,KAAM0B,YAAY,CAACM,IAAI,CAACL,EAAE,CAAE;MAAC5B,KAAK,EAAEgD,MAAM,CAACS,YAAa;MAAAP,QAAA,EACjFrG,OAAA,CAACpB,IAAI;QAACuE,KAAK,EAAEgD,MAAM,CAACU,gBAAiB;QAAAR,QAAA,EAAC;MAAM;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACf,CACP;EAED,OACE1G,OAAA,CAACrB,IAAI;IAACwE,KAAK,EAAEgD,MAAM,CAACW,SAAU;IAAAT,QAAA,GAC5BrG,OAAA,CAACpB,IAAI;MAACuE,KAAK,EAAEgD,MAAM,CAACzD,KAAM;MAAA2D,QAAA,EAAC;IAAS;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,EAE1CnG,IAAI,CAACgE,MAAM,KAAK,CAAC,GAChBvE,OAAA,CAACpB,IAAI;MAACuE,KAAK,EAAEgD,MAAM,CAACY,aAAc;MAAAV,QAAA,EAAC;IAAmB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,GAE7D1G,OAAA,CAAAE,SAAA;MAAAmG,QAAA,GACErG,OAAA,CAACnB,QAAQ;QACPwD,IAAI,EAAE9B,IAAK;QACXyG,UAAU,EAAEd,cAAe;QAC3Be,YAAY,EAAG7B,IAAI,IAAKA,IAAI,CAACL,EAAE,CAACmC,QAAQ,CAAC;MAAE;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5C,CAAC,EAEA1G,OAAA,CAACd,QAAQ,CAACP,IAAI;QAACwE,KAAK,EAAE;UAAEgE,MAAM,EAAE7F,cAAc;UAAE8F,QAAQ,EAAE;QAAS,CAAE;QAAAf,QAAA,EACnErG,OAAA,CAACnB,QAAQ;UACPwD,IAAI,EAAE9B,IAAK;UACXyG,UAAU,EAAEd,cAAe;UAC3Be,YAAY,EAAG7B,IAAI,IAAKA,IAAI,CAACL,EAAE,CAACmC,QAAQ,CAAC;QAAE;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5C;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACW,CAAC,EAChB1G,OAAA,CAAClB,gBAAgB;QAACsE,OAAO,EAAE4C,YAAa;QAAC7C,KAAK,EAAEgD,MAAM,CAACkB,YAAa;QAAAhB,QAAA,EAClErG,OAAA,CAACpB,IAAI;UAACuE,KAAK,EAAEgD,MAAM,CAACmB,gBAAiB;UAAAjB,QAAA,EAAEjF,UAAU,GAAG,WAAW,GAAG;QAAgB;UAAAmF,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1E,CAAC,EAgCrB1G,OAAA,CAACrB,IAAI;QAACwE,KAAK,EAAEgD,MAAM,CAACoB,gBAAiB;QAAAlB,QAAA,GACnCrG,OAAA,CAACpB,IAAI;UAACuE,KAAK,EAAEgD,MAAM,CAACqB,UAAW;UAAAnB,QAAA,EAAC;QAAK;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,EAC5C1G,OAAA,CAACf,SAAS;UACRkE,KAAK,EAAEgD,MAAM,CAACsB,KAAM;UACpBC,KAAK,EAAE5G,IAAK;UACZ6G,YAAY,EAAE5G,OAAQ;UACtB6G,WAAW,EAAC;QAAiB;UAAArB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC9B,CAAC,EACF1G,OAAA,CAACpB,IAAI;UAACuE,KAAK,EAAEgD,MAAM,CAACqB,UAAW;UAAAnB,QAAA,EAAC;QAAe;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,EACtD1G,OAAA,CAACf,SAAS;UACRkE,KAAK,EAAEgD,MAAM,CAACsB,KAAM;UACpBC,KAAK,EAAE1G,aAAc;UACrB2G,YAAY,EAAE1G,gBAAiB;UAC/B2G,WAAW,EAAC,2BAA2B;UACvCC,YAAY,EAAC;QAAW;UAAAtB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzB,CAAC,EACF1G,OAAA,CAACpB,IAAI;UAACuE,KAAK,EAAEgD,MAAM,CAACqB,UAAW;UAAAnB,QAAA,EAAC;QAAQ;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,EAC/C1G,OAAA,CAACf,SAAS;UACRkE,KAAK,EAAEgD,MAAM,CAACsB,KAAM;UACpBC,KAAK,EAAExG,OAAQ;UACfyG,YAAY,EAAExG,UAAW;UACzByG,WAAW,EAAC;QAAoB;UAAArB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAGjC,CAAC,EAEF1G,OAAA,CAACrB,IAAI;UAACwE,KAAK,EAAEgD,MAAM,CAAC2B,eAAgB;UAAAzB,QAAA,GAClCrG,OAAA,CAAClB,gBAAgB;YAACqE,KAAK,EAAEgD,MAAM,CAAC4B,MAAO;YAAC3E,OAAO,EAAEW,kBAAmB;YAAAsC,QAAA,EACjExE,eAAe,GAAG7B,OAAA,CAACb,iBAAiB;cAAC6I,KAAK,EAAC;YAAM;cAAAzB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,GAAG1G,OAAA,CAACpB,IAAI;cAACuE,KAAK,EAAEgD,MAAM,CAAC8B,UAAW;cAAA5B,QAAA,EAAC;YAAoB;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACnG,CAAC,EACnB1G,OAAA,CAAClB,gBAAgB;YAACqE,KAAK,EAAEgD,MAAM,CAAC4B,MAAO;YAAC3E,OAAO,EAAES,cAAe;YAAAwC,QAAA,EAC9DrG,OAAA,CAACpB,IAAI;cAACuE,KAAK,EAAEgD,MAAM,CAAC8B,UAAW;cAAA5B,QAAA,EAAC;YAAe;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACtC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACf,CAAC,EACN/E,QAAQ,IAAI3B,OAAA,CAACpB,IAAI;UAACuE,KAAK,EAAEgD,MAAM,CAAC+B,YAAa;UAAA7B,QAAA,GAAC,YAAU,EAAC1E,QAAQ,EAAC,KAAG;QAAA;UAAA4E,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEzE,CAAC,EACP1G,OAAA,CAACrB,IAAI;QAACwE,KAAK,EAAEgD,MAAM,CAACgC,gBAAiB;QAAA9B,QAAA,GACnCrG,OAAA,CAACpB,IAAI;UAACuE,KAAK,EAAEgD,MAAM,CAACiC,YAAa;UAAA/B,QAAA,EAAC;QAAsB;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,EAC/D1G,OAAA,CAAClB,gBAAgB;UACfqE,KAAK,EAAE,CACLgD,MAAM,CAACkC,aAAa,EACpBzH,eAAe,KAAK,kBAAkB,IAAIuF,MAAM,CAACmC,cAAc,CAC/D;UACFlF,OAAO,EAAEA,CAAA,KAAMvC,kBAAkB,CAAC,kBAAkB,CAAE;UAAAwF,QAAA,EAEtDrG,OAAA,CAACpB,IAAI;YAACuE,KAAK,EAAEgD,MAAM,CAACoC,WAAY;YAAAlC,QAAA,EAAC;UAAgB;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxC,CAAC,EACnB1G,OAAA,CAAClB,gBAAgB;UACfqE,KAAK,EAAE,CACLgD,MAAM,CAACkC,aAAa,EACpBzH,eAAe,KAAK,gBAAgB,IAAIuF,MAAM,CAACmC,cAAc,CAC7D;UACFlF,OAAO,EAAEA,CAAA,KAAMvC,kBAAkB,CAAC,gBAAgB,CAAE;UAAAwF,QAAA,EAEpDrG,OAAA,CAACpB,IAAI;YAACuE,KAAK,EAAEgD,MAAM,CAACoC,WAAY;YAAAlC,QAAA,EAAC;UAAc;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACf,CAAC,EACP1G,OAAA,CAACrB,IAAI;QAACwE,KAAK,EAAEgD,MAAM,CAACqC,gBAAiB;QAAAnC,QAAA,GACnCrG,OAAA,CAACpB,IAAI;UAACuE,KAAK,EAAEgD,MAAM,CAACsC,WAAY;UAAApC,QAAA,GAAC,qBAAc,EAAC5F,UAAU,CAACmD,OAAO,CAAC,CAAC,CAAC;QAAA;UAAA2C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,EAC7E1G,OAAA,CAAClB,gBAAgB;UAACsE,OAAO,EAAEqC,cAAe;UAACtC,KAAK,EAAEgD,MAAM,CAACuC,cAAe;UAAArC,QAAA,EACtErG,OAAA,CAACpB,IAAI;YAACuE,KAAK,EAAEgD,MAAM,CAACwC,kBAAmB;YAAAtC,QAAA,EAAC;UAAmB;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACf,CAAC;IAAA,eACP,CACH;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAEX;AAEA,MAAMP,MAAM,GAAGpH,UAAU,CAAC6J,MAAM,CAAC;EAC/B9B,SAAS,EAAE;IAAE+B,IAAI,EAAE,CAAC;IAAEC,OAAO,EAAE,EAAE;IAAEC,eAAe,EAAE;EAAU,CAAC;EAC/DrG,KAAK,EAAE;IAAEsG,QAAQ,EAAE,EAAE;IAAEC,UAAU,EAAE,MAAM;IAAEC,SAAS,EAAE,QAAQ;IAAEC,YAAY,EAAE;EAAG,CAAC;EAClF/C,QAAQ,EAAE;IAAE+C,YAAY,EAAE,EAAE;IAAEC,iBAAiB,EAAE,CAAC;IAAEC,iBAAiB,EAAE,MAAM;IAAEC,aAAa,EAAE;EAAG,CAAC;EAClGhD,QAAQ,EAAE;IAAE0C,QAAQ,EAAE,EAAE;IAAEG,YAAY,EAAE;EAAE,CAAC;EAC3CvC,YAAY,EAAE;IAAE2C,SAAS,EAAE,EAAE;IAAER,eAAe,EAAE,SAAS;IAAED,OAAO,EAAE,EAAE;IAAEU,YAAY,EAAE;EAAE,CAAC;EACzF3C,gBAAgB,EAAE;IAAEmB,KAAK,EAAE,MAAM;IAAEkB,SAAS,EAAE;EAAS,CAAC;EACxDnC,aAAa,EAAE;IAAEiC,QAAQ,EAAE,EAAE;IAAEhB,KAAK,EAAE,MAAM;IAAEkB,SAAS,EAAE,QAAQ;IAAEK,SAAS,EAAE;EAAG,CAAC;EAClFE,eAAe,EAAE;IAAEF,SAAS,EAAE,EAAE;IAAER,eAAe,EAAE,SAAS;IAAED,OAAO,EAAE,EAAE;IAAEU,YAAY,EAAE;EAAE,CAAC;EAC5FE,aAAa,EAAE;IAAE1B,KAAK,EAAE,MAAM;IAAEkB,SAAS,EAAE,QAAQ;IAAEF,QAAQ,EAAE;EAAG,CAAC;EAOnEzB,gBAAgB,EAAE;IAAEoC,cAAc,EAAE;EAAG,CAAC;EACxCnC,UAAU,EAAE;IAAEwB,QAAQ,EAAE,EAAE;IAAEC,UAAU,EAAE,MAAM;IAAEE,YAAY,EAAE;EAAE,CAAC;EACjE1B,KAAK,EAAE;IAAEmC,WAAW,EAAE,CAAC;IAAEC,WAAW,EAAE,MAAM;IAAEL,YAAY,EAAE,CAAC;IAAEV,OAAO,EAAE,EAAE;IAAEK,YAAY,EAAE;EAAG,CAAC;EAC9FhB,gBAAgB,EAAE;IAAEoB,SAAS,EAAE,EAAE;IAAET,OAAO,EAAE;EAAG,CAAC;EAChDV,YAAY,EAAE;IAAEY,QAAQ,EAAE,EAAE;IAAEC,UAAU,EAAE,MAAM;IAAEE,YAAY,EAAE;EAAG,CAAC;EACpEd,aAAa,EAAE;IAAES,OAAO,EAAE,EAAE;IAAEa,cAAc,EAAE,CAAC;IAAEH,YAAY,EAAE,CAAC;IAAEI,WAAW,EAAE,CAAC;IAAEC,WAAW,EAAE;EAAO,CAAC;EACvGvB,cAAc,EAAE;IAAEuB,WAAW,EAAE,SAAS;IAAEd,eAAe,EAAE;EAAU,CAAC;EACtER,WAAW,EAAE;IAAES,QAAQ,EAAE;EAAG,CAAC;EAC7BR,gBAAgB,EAAE;IAAEe,SAAS,EAAE,EAAE;IAAET,OAAO,EAAE,EAAE;IAAEgB,cAAc,EAAE,CAAC;IAAEC,cAAc,EAAE,MAAM;IAAEhB,eAAe,EAAE,MAAM;IAAES,YAAY,EAAE;EAAE,CAAC;EACrIf,WAAW,EAAE;IAAEO,QAAQ,EAAE,EAAE;IAAEC,UAAU,EAAE;EAAO,CAAC;EACjDP,cAAc,EAAE;IAAEa,SAAS,EAAE,EAAE;IAAER,eAAe,EAAE,SAAS;IAAED,OAAO,EAAE,EAAE;IAAEU,YAAY,EAAE;EAAE,CAAC;EAC3Fb,kBAAkB,EAAE;IAAEX,KAAK,EAAE,MAAM;IAAEkB,SAAS,EAAE,QAAQ;IAAEF,QAAQ,EAAE;EAAG,CAAC;EACxE3B,YAAY,EAAE;IAAEkC,SAAS,EAAE,EAAE;IAAER,eAAe,EAAE,SAAS;IAAED,OAAO,EAAE,EAAE;IAAEU,YAAY,EAAE;EAAE,CAAC;EACzFlC,gBAAgB,EAAE;IAAEU,KAAK,EAAE,MAAM;IAAEkB,SAAS,EAAE,QAAQ;IAAEF,QAAQ,EAAE;EAAG,CAAC;EACtElB,eAAe,EAAE;IAAEkC,aAAa,EAAE,KAAK;IAAEC,cAAc,EAAE,eAAe;IAAEN,cAAc,EAAE;EAAE,CAAC;EAC7F5B,MAAM,EAAE;IAAEc,IAAI,EAAE,CAAC;IAAEqB,gBAAgB,EAAE,CAAC;IAAEnB,eAAe,EAAE,SAAS;IAAED,OAAO,EAAE,CAAC;IAAEU,YAAY,EAAE,CAAC;IAAEW,UAAU,EAAE;EAAS,CAAC;EACvHlC,UAAU,EAAE;IAAED,KAAK,EAAE,MAAM;IAAEgB,QAAQ,EAAE;EAAG,CAAC;EAC3Cd,YAAY,EAAE;IAAEc,QAAQ,EAAE,EAAE;IAAEC,UAAU,EAAE,MAAM;IAAEjB,KAAK,EAAE,KAAK;IAAEuB,SAAS,EAAE,EAAE;IAAEL,SAAS,EAAE;EAAS;AAErG,CAAC,CAAC","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}