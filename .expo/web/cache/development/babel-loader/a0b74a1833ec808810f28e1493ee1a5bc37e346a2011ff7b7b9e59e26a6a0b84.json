{"ast":null,"code":"var _jsxFileName = \"/Users/payalsah/Documents/FruitShopApp/contexts/CartContext.tsx\";\nimport React, { createContext, useContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartContext = createContext(undefined);\nexport const CartProvider = ({\n  children\n}) => {\n  const [cart, setCart] = useState([]);\n  const addToCart = (product, quantity) => {\n    setCart(prevCart => {\n      const existingItem = prevCart.find(item => item.id === product.id);\n      if (existingItem) {\n        return prevCart.map(item => item.id === product.id ? Object.assign({}, item, {\n          cartQuantity: item.cartQuantity + quantity\n        }) : item);\n      } else {\n        return [...prevCart, Object.assign({}, product, {\n          cartQuantity: quantity\n        })];\n      }\n    });\n  };\n  const removeFromCart = productId => {\n    setCart(prevCart => prevCart.filter(item => item.id !== productId));\n    console.log;\n  };\n  const updateCartQuantity = (productId, quantity) => {\n    setCart(prevCart => prevCart.map(item => item.id === productId ? Object.assign({}, item, {\n      cartQuantity: quantity\n    }) : item));\n  };\n  const totalPrice = cart.reduce((sum, item) => sum + item.price * item.cartQuantity, 0);\n  return _jsxDEV(CartContext.Provider, {\n    value: {\n      cart,\n      addToCart,\n      removeFromCart,\n      updateCartQuantity,\n      totalPrice\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\nexport const useCart = () => {\n  const context = useContext(CartContext);\n  if (!context) {\n    throw new Error('useCart must be used within a CartProvider');\n  }\n  return context;\n};","map":{"version":3,"names":["React","createContext","useContext","useState","jsxDEV","_jsxDEV","CartContext","undefined","CartProvider","children","cart","setCart","addToCart","product","quantity","prevCart","existingItem","find","item","id","map","Object","assign","cartQuantity","removeFromCart","productId","filter","console","log","updateCartQuantity","totalPrice","reduce","sum","price","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","useCart","context","Error"],"sources":["/Users/payalsah/Documents/FruitShopApp/contexts/CartContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState } from 'react';\n\n// Product type used across the app\ninterface Product {\n  id: number;\n  name: string;\n  price: number;\n  description: string;\n  image: string;\n}\n\n// CartItem extends Product, adding cartQuantity to track the amount in the cart\ninterface CartItem extends Product {\n  cartQuantity: number;\n}\n\n// CartContextType defines all the methods and data the context will provide\ninterface CartContextType {\n  cart: CartItem[];\n  addToCart: (product: Product, quantity: number) => void;\n  removeFromCart: (productId: number) => void;\n  updateCartQuantity: (productId: number, quantity: number) => void;\n  totalPrice: number;\n}\n\n// Create context with CartContextType or undefined (if not available)\nconst CartContext = createContext<CartContextType | undefined>(undefined);\n\nexport const CartProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\n  // Initialize cart state as an empty array\n  const [cart, setCart] = useState<CartItem[]>([]);\n\n  // Add product to the cart with a specific quantity\n  const addToCart = (product: Product, quantity: number) => {\n    setCart((prevCart) => {\n      const existingItem = prevCart.find((item) => item.id === product.id);\n      if (existingItem) {\n        // Update the cartQuantity if the item already exists in the cart\n        return prevCart.map((item) =>\n          item.id === product.id\n            ? { ...item, cartQuantity: item.cartQuantity + quantity }\n            : item\n        );\n      } else {\n        // Add a new item to the cart\n        return [...prevCart, { ...product, cartQuantity: quantity }];\n      }\n    });\n  };\n\n  // Remove product from the cart by id\n  const removeFromCart = (productId: number) => {\n    setCart((prevCart) => prevCart.filter((item) => item.id !== productId));\n    console.log\n  };\n\n  // Update quantity of a product in the cart\n  const updateCartQuantity = (productId: number, quantity: number) => {\n    setCart((prevCart) =>\n      prevCart.map((item) =>\n        item.id === productId ? { ...item, cartQuantity: quantity } : item\n      )\n    );\n  };\n\n  // Calculate the total price by multiplying the price with quantity for each item\n  const totalPrice = cart.reduce(\n    (sum, item) => sum + item.price * item.cartQuantity,\n    0\n  );\n\n  return (\n    <CartContext.Provider\n      value={{ cart, addToCart, removeFromCart, updateCartQuantity, totalPrice }}\n    >\n      {children}\n    </CartContext.Provider>\n  );\n};\n\n// Custom hook to access cart data and methods\nexport const useCart = () => {\n  const context = useContext(CartContext);\n  if (!context) {\n    throw new Error('useCart must be used within a CartProvider');\n  }\n  return context;\n};\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AA0BnE,MAAMC,WAAW,GAAGL,aAAa,CAA8BM,SAAS,CAAC;AAEzE,OAAO,MAAMC,YAAqD,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAErF,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAa,EAAE,CAAC;EAGhD,MAAMS,SAAS,GAAGA,CAACC,OAAgB,EAAEC,QAAgB,KAAK;IACxDH,OAAO,CAAEI,QAAQ,IAAK;MACpB,MAAMC,YAAY,GAAGD,QAAQ,CAACE,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKN,OAAO,CAACM,EAAE,CAAC;MACpE,IAAIH,YAAY,EAAE;QAEhB,OAAOD,QAAQ,CAACK,GAAG,CAAEF,IAAI,IACvBA,IAAI,CAACC,EAAE,KAAKN,OAAO,CAACM,EAAE,GAAAE,MAAA,CAAAC,MAAA,KACbJ,IAAI;UAAEK,YAAY,EAAEL,IAAI,CAACK,YAAY,GAAGT;QAAQ,KACrDI,IACN,CAAC;MACH,CAAC,MAAM;QAEL,OAAO,CAAC,GAAGH,QAAQ,EAAAM,MAAA,CAAAC,MAAA,KAAOT,OAAO;UAAEU,YAAY,EAAET;QAAQ,GAAG;MAC9D;IACF,CAAC,CAAC;EACJ,CAAC;EAGD,MAAMU,cAAc,GAAIC,SAAiB,IAAK;IAC5Cd,OAAO,CAAEI,QAAQ,IAAKA,QAAQ,CAACW,MAAM,CAAER,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKM,SAAS,CAAC,CAAC;IACvEE,OAAO,CAACC,GAAG;EACb,CAAC;EAGD,MAAMC,kBAAkB,GAAGA,CAACJ,SAAiB,EAAEX,QAAgB,KAAK;IAClEH,OAAO,CAAEI,QAAQ,IACfA,QAAQ,CAACK,GAAG,CAAEF,IAAI,IAChBA,IAAI,CAACC,EAAE,KAAKM,SAAS,GAAAJ,MAAA,CAAAC,MAAA,KAAQJ,IAAI;MAAEK,YAAY,EAAET;IAAQ,KAAKI,IAChE,CACF,CAAC;EACH,CAAC;EAGD,MAAMY,UAAU,GAAGpB,IAAI,CAACqB,MAAM,CAC5B,CAACC,GAAG,EAAEd,IAAI,KAAKc,GAAG,GAAGd,IAAI,CAACe,KAAK,GAAGf,IAAI,CAACK,YAAY,EACnD,CACF,CAAC;EAED,OACElB,OAAA,CAACC,WAAW,CAAC4B,QAAQ;IACnBC,KAAK,EAAE;MAAEzB,IAAI;MAAEE,SAAS;MAAEY,cAAc;MAAEK,kBAAkB;MAAEC;IAAW,CAAE;IAAArB,QAAA,EAE1EA;EAAQ;IAAA2B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAGD,OAAO,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAC3B,MAAMC,OAAO,GAAGvC,UAAU,CAACI,WAAW,CAAC;EACvC,IAAI,CAACmC,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,4CAA4C,CAAC;EAC/D;EACA,OAAOD,OAAO;AAChB,CAAC","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}