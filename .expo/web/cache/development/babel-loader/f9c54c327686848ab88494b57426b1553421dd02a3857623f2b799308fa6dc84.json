{"ast":null,"code":"var _jsxFileName = \"/Users/payalsah/Documents/FruitShopApp/screens/ProductsScreen.tsx\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { products } from '../data';\nimport ProductCard from '../components/ProductCard';\nimport { useCart } from '../contexts/CartContext';\nimport { useNavigation } from '@react-navigation/native';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProductsScreen = () => {\n  const {\n    addToCart,\n    cart\n  } = useCart();\n  const [searchQuery, setSearchQuery] = useState('');\n  const filteredProducts = products.filter(item => item.name.toLowerCase().includes(searchQuery.toLowerCase()));\n  const navigation = useNavigation();\n  React.useLayoutEffect(() => {\n    navigation.setOptions({\n      headerRight: () => _jsxDEV(Button, {\n        title: \"Go to Cart\",\n        onPress: () => navigation.navigate('Cart'),\n        color: \"#FFA500\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)\n    });\n  }, [navigation]);\n  const handleAddToCart = (product, quantity) => {\n    if (quantity > 0) {\n      addToCart(product, quantity);\n    }\n  };\n  return _jsxDEV(View, {\n    style: styles.container,\n    children: [_jsxDEV(TextInput, {\n      style: styles.searchBar,\n      placeholder: \"Search for fruits or juices...\",\n      placeholderTextColor: \"#FFA500\",\n      value: searchQuery,\n      onChangeText: setSearchQuery\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), _jsxDEV(FlatList, {\n      data: filteredProducts,\n      keyExtractor: item => item.id.toString(),\n      renderItem: ({\n        item\n      }) => _jsxDEV(ProductCard, {\n        product: item\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), \"ListEmptyComponent=\", _jsxDEV(Text, {\n      style: styles.noResults,\n      children: \"No results found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 27\n    }, this), \" // Show when no match\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f8f8f8',\n    padding: 8\n  },\n  searchBar: {\n    backgroundColor: '#fff',\n    padding: 12,\n    borderRadius: 8,\n    fontSize: 16,\n    marginBottom: 10,\n    borderWidth: 1,\n    borderColor: '#ccc'\n  },\n  noResults: {\n    textAlign: 'center',\n    fontSize: 16,\n    color: '#888',\n    marginTop: 20\n  },\n  cartSummary: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    textAlign: 'center',\n    marginVertical: 16\n  }\n});\nexport default ProductsScreen;","map":{"version":3,"names":["React","useState","View","FlatList","Text","TextInput","StyleSheet","Button","products","ProductCard","useCart","useNavigation","jsxDEV","_jsxDEV","ProductsScreen","addToCart","cart","searchQuery","setSearchQuery","filteredProducts","filter","item","name","toLowerCase","includes","navigation","useLayoutEffect","setOptions","headerRight","title","onPress","navigate","color","fileName","_jsxFileName","lineNumber","columnNumber","handleAddToCart","product","quantity","style","styles","container","children","searchBar","placeholder","placeholderTextColor","value","onChangeText","data","keyExtractor","id","toString","renderItem","noResults","create","flex","backgroundColor","padding","borderRadius","fontSize","marginBottom","borderWidth","borderColor","textAlign","marginTop","cartSummary","fontWeight","marginVertical"],"sources":["/Users/payalsah/Documents/FruitShopApp/screens/ProductsScreen.tsx"],"sourcesContent":["import React , { useState } from 'react';\nimport { View, FlatList, Text, TextInput ,StyleSheet , Button} from 'react-native';\nimport { products } from '../data'; // Import the product list\nimport ProductCard from '../components/ProductCard';\nimport { useCart } from '../contexts/CartContext'; // Use CartContext for global cart state\nimport { useNavigation } from '@react-navigation/native';\nimport { NativeStackNavigationProp } from '@react-navigation/native-stack';\nimport { RootStackParamList } from '../navigation/types';\n\ntype CartScreenNavigationProp = NativeStackNavigationProp<RootStackParamList, 'Cart'>;\nconst ProductsScreen: React.FC = () => {\n  const { addToCart, cart } = useCart(); // Access global cart state and methods\n  const [searchQuery, setSearchQuery] = useState(''); // Search input state\n\n  // Function to filter products based on search\n  const filteredProducts = products.filter((item) =>\n    item.name.toLowerCase().includes(searchQuery.toLowerCase()) // Case-insensitive search\n  );\n\n\n\n  const navigation = useNavigation<CartScreenNavigationProp>();\n  React.useLayoutEffect(() => {\n    navigation.setOptions({\n      headerRight: () => (\n        <Button\n          title=\"Go to Cart\"\n          onPress={() => navigation.navigate('Cart')} // Ensure 'Cart' is your route name for CartScreen\n          color=\"#FFA500\"\n        />\n      ),\n    });\n  }, [navigation]);\n  const handleAddToCart = (product: any, quantity: number) => {\n    if (quantity > 0) {\n      addToCart(product, quantity); // Add product with the specified quantity to the cart\n    }\n  };\n\n  return (\n    <View style={styles.container}>\n      {/* Search Bar */}\n      <TextInput\n        style={styles.searchBar}\n        placeholder=\"Search for fruits or juices...\"\n        placeholderTextColor=\"#FFA500\"\n        value={searchQuery}\n        onChangeText={setSearchQuery} // Update search query\n      />\n\n      {/* Render product list */}\n      <FlatList\n        data={filteredProducts} // Display filtered results\n        keyExtractor={(item) => item.id.toString()}\n        renderItem={({ item }) => (\n          <ProductCard product={item}  />\n        )}\n      />\n      {/* Display cart summary */}\n      {/* <Text style={styles.cartSummary}>Cart: {cart.length} items</Text> */}\n      ListEmptyComponent={<Text style={styles.noResults}>No results found</Text>} // Show when no match\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f8f8f8',\n    padding: 8,\n  },\n  searchBar: {\n    backgroundColor: '#fff',\n    padding: 12,\n    borderRadius: 8,\n    fontSize: 16,\n    marginBottom: 10,\n    borderWidth: 1,\n    borderColor: '#ccc',\n  },\n  noResults: {\n    textAlign: 'center',\n    fontSize: 16,\n    color: '#888',\n    marginTop: 20,\n  },\n  cartSummary: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    textAlign: 'center',\n    marginVertical: 16,\n  },\n});\n\nexport default ProductsScreen;\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}