{"ast":null,"code":"import React,{useEffect,useState}from'react';import View from\"react-native-web/dist/exports/View\";import Text from\"react-native-web/dist/exports/Text\";import FlatList from\"react-native-web/dist/exports/FlatList\";import TouchableOpacity from\"react-native-web/dist/exports/TouchableOpacity\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import Alert from\"react-native-web/dist/exports/Alert\";import TextInput from\"react-native-web/dist/exports/TextInput\";import Animated from\"react-native-web/dist/exports/Animated\";import{useCart}from'../contexts/CartContext';import{useNavigation}from'@react-navigation/native';import{auth}from'../firebaseConfig';import{onAuthStateChanged}from'firebase/auth';import*as Linking from'expo-linking';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";export default function CartScreen(){const{cart,removeFromCart,totalPrice}=useCart();const[currentUser,setCurrentUser]=useState(null);const[selectedPayment,setSelectedPayment]=useState(null);const[name,setName]=useState('');const[contactNumber,setContactNumber]=useState('');const[address,setAddress]=useState('');const[isExpanded,setIsExpanded]=useState(false);const[animatedHeight]=useState(new Animated.Value(0));const navigation=useNavigation();useEffect(()=>{const unsubscribe=onAuthStateChanged(auth,user=>{setCurrentUser(user);});return()=>unsubscribe();},[]);const handleRemove=id=>{Alert.alert('Remove Item','Are you sure you want to remove this item from your cart?',[{text:'Cancel',style:'cancel'},{text:'Remove',onPress:()=>removeFromCart(id)}]);};const sendOrderMessage=paymentType=>{const orderDetails=cart.map(item=>`${item.name} x${item.cartQuantity}`).join(', ');const message=`Order Details:\\nName: ${name}\\nContact: ${contactNumber}\\nProducts: ${orderDetails}\\nTotal Price: â‚¹${totalPrice.toFixed(2)}\\nPayment Method: ${paymentType}`;Linking.openURL(`sms:${contactNumber}?body=${encodeURIComponent(message)}`);Linking.openURL(`whatsapp://send?phone=${contactNumber}&text=${encodeURIComponent(message)}`);const ownerNumber='6205720019';Linking.openURL(`sms:${ownerNumber}?body=${encodeURIComponent(message)}`);Linking.openURL(`whatsapp://send?phone=${ownerNumber}&text=${encodeURIComponent(message)}`);};const handleCheckout=()=>{if(!currentUser){Alert.alert('Authentication Required','You need to log in to proceed to checkout.',[{text:'Cancel',style:'cancel'},{text:'Login',onPress:()=>navigation.navigate('Login')}]);}else if(!name||!contactNumber||!address){Alert.alert('Missing Information','Please provide your name , contact number and address.');}else if(selectedPayment==='Cash on Delivery'){Alert.alert('Order Confirmed','Your order has been placed and will be paid on delivery.');sendOrderMessage('Cash on Delivery');}else if(selectedPayment==='Online Payment'){navigation.navigate('OnlinePayment',{name,contactNumber,totalPrice,cart,address});}else{Alert.alert('Select Payment Method','Please choose a payment method to proceed.');}};useEffect(()=>{Animated.timing(animatedHeight,{toValue:isExpanded?300:0,duration:300,useNativeDriver:false}).start();},[isExpanded]);const toggleExpand=()=>{setIsExpanded(prev=>!prev);};const renderCartItem=({item})=>_jsxs(View,{style:styles.cartItem,children:[_jsx(Text,{style:styles.itemText,children:item.name}),_jsxs(Text,{style:styles.itemText,children:[\"Quantity: \",item.cartQuantity]}),_jsxs(Text,{style:styles.itemText,children:[\"Price: \\u20B9\",item.price.toFixed(2)]}),_jsx(TouchableOpacity,{onPress:()=>handleRemove(item.id),style:styles.removeButton,children:_jsx(Text,{style:styles.removeButtonText,children:\"Remove\"})})]});return _jsxs(View,{style:styles.container,children:[_jsx(Text,{style:styles.title,children:\"Your Cart\"}),cart.length===0?_jsx(Text,{style:styles.emptyCartText,children:\"Your cart is empty.\"}):_jsxs(_Fragment,{children:[_jsx(FlatList,{data:cart,renderItem:renderCartItem,keyExtractor:item=>item.id.toString()}),_jsx(Animated.View,{style:{height:animatedHeight,overflow:'hidden'},children:_jsx(FlatList,{data:cart,renderItem:renderCartItem,keyExtractor:item=>item.id.toString()})}),_jsx(TouchableOpacity,{onPress:toggleExpand,style:styles.toggleButton,children:_jsx(Text,{style:styles.toggleButtonText,children:isExpanded?'View Less':'View All Items'})}),_jsxs(View,{style:styles.addressContainer,children:[_jsx(Text,{style:styles.inputLabel,children:\"Name:\"}),_jsx(TextInput,{style:styles.input,value:name,onChangeText:setName,placeholder:\"Enter your name\"}),_jsx(Text,{style:styles.inputLabel,children:\"Contact Number:\"}),_jsx(TextInput,{style:styles.input,value:contactNumber,onChangeText:setContactNumber,placeholder:\"Enter your contact number\",keyboardType:\"phone-pad\"}),_jsx(Text,{style:styles.inputLabel,children:\"Address:\"}),_jsx(TextInput,{style:styles.input,value:address,onChangeText:setAddress,placeholder:\"Enter your address\"})]}),_jsxs(View,{style:styles.paymentContainer,children:[_jsx(Text,{style:styles.paymentTitle,children:\"Select Payment Method:\"}),_jsx(TouchableOpacity,{style:[styles.paymentOption,selectedPayment==='Cash on Delivery'&&styles.selectedOption],onPress:()=>setSelectedPayment('Cash on Delivery'),children:_jsx(Text,{style:styles.paymentText,children:\"Cash on Delivery\"})}),_jsx(TouchableOpacity,{style:[styles.paymentOption,selectedPayment==='Online Payment'&&styles.selectedOption],onPress:()=>setSelectedPayment('Online Payment'),children:_jsx(Text,{style:styles.paymentText,children:\"Online Payment\"})})]}),_jsxs(View,{style:styles.summaryContainer,children:[_jsxs(Text,{style:styles.summaryText,children:[\"Total Price: \\u20B9\",totalPrice.toFixed(2)]}),_jsx(TouchableOpacity,{onPress:handleCheckout,style:styles.checkoutButton,children:_jsx(Text,{style:styles.checkoutButtonText,children:\"Proceed to Checkout\"})})]})]})]});}const styles=StyleSheet.create({container:{flex:1,padding:20,backgroundColor:'#f7f7f7'},title:{fontSize:24,fontWeight:'bold',textAlign:'center',marginBottom:20},cartItem:{marginBottom:15,borderBottomWidth:1,borderBottomColor:'#ddd',paddingBottom:10},itemText:{fontSize:16,marginBottom:5},removeButton:{marginTop:10,backgroundColor:'#FF6347',padding:10,borderRadius:5},removeButtonText:{color:'#fff',textAlign:'center'},emptyCartText:{fontSize:18,color:'gray',textAlign:'center',marginTop:20},showItemsButton:{marginTop:10,backgroundColor:'#4CAF50',padding:10,borderRadius:5},showItemsText:{color:'#fff',textAlign:'center',fontSize:16},addressContainer:{marginVertical:20},inputLabel:{fontSize:16,fontWeight:'bold',marginBottom:5},input:{borderWidth:1,borderColor:'#ccc',borderRadius:5,padding:10,marginBottom:10},paymentContainer:{marginTop:20,padding:10},paymentTitle:{fontSize:18,fontWeight:'bold',marginBottom:10},paymentOption:{padding:15,marginVertical:5,borderRadius:5,borderWidth:1,borderColor:'#ddd'},selectedOption:{borderColor:'#4CAF50',backgroundColor:'#e8f5e9'},paymentText:{fontSize:16},summaryContainer:{marginTop:20,padding:15,borderTopWidth:1,borderTopColor:'#ddd',backgroundColor:'#fff',borderRadius:5},summaryText:{fontSize:18,fontWeight:'bold'},checkoutButton:{marginTop:10,backgroundColor:'#FFA500',padding:15,borderRadius:5},checkoutButtonText:{color:'#fff',textAlign:'center',fontSize:18},toggleButton:{marginTop:10,backgroundColor:'#FFA500',padding:10,borderRadius:5},toggleButtonText:{color:'#fff',textAlign:'center',fontSize:16}});","map":{"version":3,"names":["React","useEffect","useState","View","Text","FlatList","TouchableOpacity","StyleSheet","Alert","TextInput","Animated","useCart","useNavigation","auth","onAuthStateChanged","Linking","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","CartScreen","cart","removeFromCart","totalPrice","currentUser","setCurrentUser","selectedPayment","setSelectedPayment","name","setName","contactNumber","setContactNumber","address","setAddress","isExpanded","setIsExpanded","animatedHeight","Value","navigation","unsubscribe","user","handleRemove","id","alert","text","style","onPress","sendOrderMessage","paymentType","orderDetails","map","item","cartQuantity","join","message","toFixed","openURL","encodeURIComponent","ownerNumber","handleCheckout","navigate","timing","toValue","duration","useNativeDriver","start","toggleExpand","prev","renderCartItem","styles","cartItem","children","itemText","price","removeButton","removeButtonText","container","title","length","emptyCartText","data","renderItem","keyExtractor","toString","height","overflow","toggleButton","toggleButtonText","addressContainer","inputLabel","input","value","onChangeText","placeholder","keyboardType","paymentContainer","paymentTitle","paymentOption","selectedOption","paymentText","summaryContainer","summaryText","checkoutButton","checkoutButtonText","create","flex","padding","backgroundColor","fontSize","fontWeight","textAlign","marginBottom","borderBottomWidth","borderBottomColor","paddingBottom","marginTop","borderRadius","color","showItemsButton","showItemsText","marginVertical","borderWidth","borderColor","borderTopWidth","borderTopColor"],"sources":["/Users/payalsah/Documents/FruitShopApp/screens/CartScreen.tsx"],"sourcesContent":["// import React, { useEffect, useState } from 'react';\n// import {\n//   View,\n//   Text,\n//   FlatList,\n//   TouchableOpacity,\n//   StyleSheet,\n//   Alert,\n// } from 'react-native';\n// import { useCart } from '../contexts/CartContext'; // Cart context\n// import { useNavigation } from '@react-navigation/native';\n// import { auth } from '../firebaseConfig';\n// import { onAuthStateChanged } from 'firebase/auth';\n// import { User } from 'firebase/auth';\n// import { RootStackParamList } from '../navigation/types';\n// import { NativeStackNavigationProp } from '@react-navigation/native-stack';\n\n\n// interface CartItem {\n//   id: number;\n//   name: string;\n//   price: number;\n//   cartQuantity: number;\n// }\n\n// type CartScreenNavigationProp = NativeStackNavigationProp<RootStackParamList, 'Cart'>;\n\n\n// export default function CartScreen() {\n//   const { cart, removeFromCart, totalPrice } = useCart(); // Cart context\n//   const [user, setUser] = useState(null); // Firebase auth state\n//   const [selectedPayment, setSelectedPayment] = useState<string | null>(null);\n//   const [currentUser, setCurrentUser] = useState<User | null>(null); // Allow User | null\n//   const navigation = useNavigation();\n\n//   useEffect(() => {\n//     const unsubscribe = onAuthStateChanged(auth, (user) => {\n//       setCurrentUser(user); // Sets the user if logged in\n//     });\n//     return () => unsubscribe(); // Cleanup subscription\n//   }, []);\n\n//   const handleRemove = (id: number) => {\n//     Alert.alert('Remove Item', 'Are you sure you want to remove this item from your cart?', [\n//       { text: 'Cancel', style: 'cancel' },\n//       { text: 'Remove', onPress: () => removeFromCart(id) },\n//     ]);\n//   };\n\n//   const handleCheckout = () => {\n//     if (!currentUser) {\n//       // If user not logged in, navigate to login\n//       Alert.alert(\n//         'Authentication Required',\n//         'You need to log in to proceed to checkout.',\n//         [\n//           { text: 'Cancel', style: 'cancel' },\n//           { text: 'Login', onPress: () => navigation.navigate('Login') },\n//         ]\n//       );\n//     } else if (selectedPayment === 'Online Payment') {\n//       // Navigate to online payment\n//       navigation.navigate('OnlinePayment'); // Replace with your Online Payment screen\n//     } else if (selectedPayment === 'Cash on Delivery') {\n//       // Confirm cash on delivery order\n//       Alert.alert('Order Confirmed', 'Your order will be paid on delivery.');\n//     } else {\n//       // No payment method selected\n//       Alert.alert('Select Payment Method', 'Please choose a payment method to proceed.');\n//     }\n//   };\n\n//   const renderCartItem = ({ item }: { item: CartItem }) => (\n//     <View style={styles.cartItem}>\n//       <Text style={styles.itemText}>{item.name}</Text>\n//       <Text style={styles.itemText}>Quantity: {item.cartQuantity}</Text>\n//       <Text style={styles.itemText}>Price: â‚¹{item.price.toFixed(2)}</Text>\n//       <TouchableOpacity onPress={() => handleRemove(item.id)} style={styles.removeButton}>\n//         <Text style={styles.removeButtonText}>Remove</Text>\n//       </TouchableOpacity>\n//     </View>\n//   );\n\n//   return (\n//     <View style={styles.container}>\n//       <Text style={styles.title}>Your Cart</Text>\n//       {cart.length === 0 ? (\n//         <Text style={styles.emptyCartText}>Your cart is empty.</Text>\n//       ) : (\n//         <>\n//           <FlatList\n//             data={cart}\n//             renderItem={renderCartItem}\n//             keyExtractor={(item) => item.id.toString()}\n//           />\n//           <View style={styles.paymentContainer}>\n//             <Text style={styles.paymentTitle}>Select Payment Method:</Text>\n//             <TouchableOpacity\n//               style={[\n//                 styles.paymentOption,\n//                 selectedPayment === 'Cash on Delivery' && styles.selectedOption,\n//               ]}\n//               onPress={() => setSelectedPayment('Cash on Delivery')}\n//             >\n//               <Text style={styles.paymentText}>Cash on Delivery</Text>\n//             </TouchableOpacity>\n//             <TouchableOpacity\n//               style={[\n//                 styles.paymentOption,\n//                 selectedPayment === 'Online Payment' && styles.selectedOption,\n//               ]}\n//               onPress={() => setSelectedPayment('Online Payment')}\n//             >\n//               <Text style={styles.paymentText}>Online Payment</Text>\n//             </TouchableOpacity>\n//           </View>\n//           <View style={styles.summaryContainer}>\n//             <Text style={styles.summaryText}>Total Price: â‚¹{totalPrice.toFixed(2)}</Text>\n//             <TouchableOpacity onPress={handleCheckout} style={styles.checkoutButton}>\n//               <Text style={styles.checkoutButtonText}>Proceed to Checkout</Text>\n//             </TouchableOpacity>\n//           </View>\n//         </>\n//       )}\n//     </View>\n//   );\n// }\n\n// const styles = StyleSheet.create({\n//   container: {\n//     flex: 1,\n//     padding: 20,\n//     backgroundColor: '#f7f7f7',\n//   },\n//   title: {\n//     fontSize: 24,\n//     fontWeight: 'bold',\n//     textAlign: 'center',\n//     marginBottom: 20,\n//   },\n//   cartItem: {\n//     marginBottom: 15,\n//     borderBottomWidth: 1,\n//     borderBottomColor: '#ddd',\n//     paddingBottom: 10,\n//   },\n//   itemText: {\n//     fontSize: 16,\n//     marginBottom: 5,\n//   },\n//   removeButton: {\n//     marginTop: 10,\n//     backgroundColor: '#FF6347',\n//     padding: 10,\n//     borderRadius: 5,\n//   },\n//   removeButtonText: {\n//     color: '#fff',\n//     textAlign: 'center',\n//   },\n//   emptyCartText: {\n//     fontSize: 18,\n//     color: 'gray',\n//     textAlign: 'center',\n//     marginTop: 20,\n//   },\n//   paymentContainer: {\n//     marginTop: 20,\n//     padding: 10,\n//   },\n//   paymentTitle: {\n//     fontSize: 18,\n//     fontWeight: 'bold',\n//     marginBottom: 10,\n//   },\n//   paymentOption: {\n//     padding: 15,\n//     marginVertical: 5,\n//     borderRadius: 5,\n//     borderWidth: 1,\n//     borderColor: '#ddd',\n//   },\n//   selectedOption: {\n//     borderColor: '#4CAF50',\n//     backgroundColor: '#e8f5e9',\n//   },\n//   paymentText: {\n//     fontSize: 16,\n//   },\n//   summaryContainer: {\n//     marginTop: 20,\n//     padding: 15,\n//     borderTopWidth: 1,\n//     borderTopColor: '#ddd',\n//     backgroundColor: '#fff',\n//     borderRadius: 5,\n//   },\n//   summaryText: {\n//     fontSize: 18,\n//     fontWeight: 'bold',\n//   },\n//   checkoutButton: {\n//     marginTop: 10,\n//     backgroundColor: '#4CAF50',\n//     padding: 15,\n//     borderRadius: 5,\n//   },\n//   checkoutButtonText: {\n//     color: '#fff',\n//     textAlign: 'center',\n//     fontSize: 18,\n//   },\n// });\n\n\n\nimport React, { useEffect, useState } from 'react';\nimport {\n  View,\n  Text,\n  FlatList,\n  TouchableOpacity,\n  StyleSheet,\n  Alert,\n  TextInput,\n  // Modal,\n  ScrollView,\n  Animated,\n} from 'react-native';\nimport { useCart } from '../contexts/CartContext'; // Cart context\nimport { useNavigation } from '@react-navigation/native';\nimport { auth } from '../firebaseConfig';\nimport { onAuthStateChanged } from 'firebase/auth';\nimport { User } from 'firebase/auth';\nimport { RootStackParamList } from '../navigation/types';\nimport { NativeStackNavigationProp } from '@react-navigation/native-stack';\nimport * as Linking from 'expo-linking';\n\nexport interface CartItem {\n  id: number;\n  name: string;\n  price: number;\n  cartQuantity: number;\n}\n\ntype CartScreenNavigationProp = NativeStackNavigationProp<RootStackParamList, 'Cart'>;\n\nexport default function CartScreen() {\n  const { cart, removeFromCart, totalPrice } = useCart(); // Cart context\n  const [currentUser, setCurrentUser] = useState<User | null>(null); // Firebase auth state\n  const [selectedPayment, setSelectedPayment] = useState<string | null>(null);\n  const [name, setName] = useState('');\n  const [contactNumber, setContactNumber] = useState('');\n  const [address, setAddress] = useState('');\n  // const [isModalVisible, setModalVisible] = useState(false); // Modal visibility state\n  const [isExpanded, setIsExpanded] = useState(false); // State to track if the list is expanded\n  const [animatedHeight] = useState(new Animated.Value(0)); // Animated value for height transition\n  const navigation = useNavigation<CartScreenNavigationProp>();\n\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, (user) => {\n      setCurrentUser(user); // Sets the user if logged in\n    });\n    return () => unsubscribe(); // Cleanup subscription\n  }, []);\n\n  const handleRemove = (id: number) => {\n    Alert.alert('Remove Item', 'Are you sure you want to remove this item from your cart?', [\n      { text: 'Cancel', style: 'cancel' },\n      { text: 'Remove', onPress: () => removeFromCart(id) },\n    ]);\n  };\n\n  const sendOrderMessage = (paymentType: string) => {\n    const orderDetails = cart\n      .map((item) => `${item.name} x${item.cartQuantity}`)\n      .join(', ');\n    const message = `Order Details:\\nName: ${name}\\nContact: ${contactNumber}\\nProducts: ${orderDetails}\\nTotal Price: â‚¹${totalPrice.toFixed(\n      2\n    )}\\nPayment Method: ${paymentType}`;\n\n\n    // Send message to the customer\n    Linking.openURL(`sms:${contactNumber}?body=${encodeURIComponent(message)}`);\n    Linking.openURL(`whatsapp://send?phone=${contactNumber}&text=${encodeURIComponent(message)}`);\n\n    // Send message to the owner\n    const ownerNumber = '6205720019';\n    Linking.openURL(`sms:${ownerNumber}?body=${encodeURIComponent(message)}`);\n    Linking.openURL(`whatsapp://send?phone=${ownerNumber}&text=${encodeURIComponent(message)}`);\n  \n\n  };\n\n  const handleCheckout = () => {\n    if (!currentUser) {\n      // If user not logged in, navigate to login\n      Alert.alert(\n        'Authentication Required',\n        'You need to log in to proceed to checkout.',\n        [\n          { text: 'Cancel', style: 'cancel' },\n          { text: 'Login', onPress: () => navigation.navigate('Login') },\n        ]\n      );\n    } else if (!name || !contactNumber || !address) {\n      Alert.alert('Missing Information', 'Please provide your name , contact number and address.');\n    } else if (selectedPayment === 'Cash on Delivery') {\n      // Confirm Cash on Delivery order\n      Alert.alert('Order Confirmed', 'Your order has been placed and will be paid on delivery.');\n      sendOrderMessage('Cash on Delivery');\n    } else if (selectedPayment === 'Online Payment') {\n      // Navigate to Online Payment\n      navigation.navigate('OnlinePayment', {\n        name,\n        contactNumber,\n        totalPrice,\n        cart,\n        address,\n      });\n    } else {\n      Alert.alert('Select Payment Method', 'Please choose a payment method to proceed.');\n    }\n  };\n\n  // const toggleModal = () => {\n  //   setModalVisible(!isModalVisible);\n  // };\n\n  useEffect(() => {\n    // Animate the height change\n    Animated.timing(animatedHeight, {\n      toValue: isExpanded ? 300 : 0, // Adjust the height value as needed\n      duration: 300,\n      useNativeDriver: false,\n    }).start();\n  }, [isExpanded]);\n\n  const toggleExpand = () => {\n    setIsExpanded((prev) => !prev);\n  };\n\n\n\n  const renderCartItem = ({ item }: { item: CartItem }) => (\n    <View style={styles.cartItem}>\n      <Text style={styles.itemText}>{item.name}</Text>\n      <Text style={styles.itemText}>Quantity: {item.cartQuantity}</Text>\n      <Text style={styles.itemText}>Price: â‚¹{item.price.toFixed(2)}</Text>\n      <TouchableOpacity onPress={() => handleRemove(item.id)} style={styles.removeButton}>\n        <Text style={styles.removeButtonText}>Remove</Text>\n      </TouchableOpacity>\n    </View>\n  );\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>Your Cart</Text>\n      \n      {cart.length === 0 ? (\n        <Text style={styles.emptyCartText}>Your cart is empty.</Text>\n      ) : (\n        <>\n          <FlatList\n            data={cart}\n            renderItem={renderCartItem}\n            keyExtractor={(item) => item.id.toString()}\n          />\n\n            <Animated.View style={{ height: animatedHeight, overflow: 'hidden' }}>\n              <FlatList\n                data={cart} // Show the remaining items in the expanded section\n                renderItem={renderCartItem}\n                keyExtractor={(item) => item.id.toString()}\n              />\n            </Animated.View>\n            <TouchableOpacity onPress={toggleExpand} style={styles.toggleButton}>\n              <Text style={styles.toggleButtonText}>{isExpanded ? 'View Less' : 'View All Items'}</Text>\n            </TouchableOpacity>\n\n          {/* <TouchableOpacity onPress={toggleModal} style={styles.showItemsButton}>\n            <Text style={styles.showItemsText}>View All Items</Text>\n          </TouchableOpacity> */}\n\n          {/* Modal for displaying all cart items */}\n          {/* <Modal\n            visible={isModalVisible}\n            transparent={true}\n            animationType=\"slide\"\n            onRequestClose={toggleModal}\n          >\n            <View style={styles.modalContainer}>\n              <View style={styles.modalContent}>\n                <Text style={styles.modalTitle}>Cart Items</Text>\n                <ScrollView>\n                  {cart.map((item) => (\n                    <View key={item.id} style={styles.modalItem}>\n                      <Text style={styles.itemText}>{item.name}</Text>\n                      <Text style={styles.itemText}>Quantity: {item.cartQuantity}</Text>\n                      <Text style={styles.itemText}>Price: â‚¹{item.price.toFixed(2)}</Text>\n                    </View>\n                  ))}\n                </ScrollView>\n                <TouchableOpacity onPress={toggleModal} style={styles.closeModalButton}>\n                  <Text style={styles.closeModalText}>Close</Text>\n                </TouchableOpacity>\n              </View>\n            </View>\n          </Modal> */}\n          \n          <View style={styles.addressContainer}>\n            <Text style={styles.inputLabel}>Name:</Text>\n            <TextInput\n              style={styles.input}\n              value={name}\n              onChangeText={setName}\n              placeholder=\"Enter your name\"\n            />\n            <Text style={styles.inputLabel}>Contact Number:</Text>\n            <TextInput\n              style={styles.input}\n              value={contactNumber}\n              onChangeText={setContactNumber}\n              placeholder=\"Enter your contact number\"\n              keyboardType=\"phone-pad\"\n            />\n            <Text style={styles.inputLabel}>Address:</Text>\n            <TextInput\n              style={styles.input}\n              value={address}\n              onChangeText={setAddress}\n              placeholder=\"Enter your address\"\n              // returnKeyType=\"done\"\n              // onSubmitEditing={() => Keyboard.dismiss()}\n            />\n            \n          </View>\n          <View style={styles.paymentContainer}>\n            <Text style={styles.paymentTitle}>Select Payment Method:</Text>\n            <TouchableOpacity\n              style={[\n                styles.paymentOption,\n                selectedPayment === 'Cash on Delivery' && styles.selectedOption,\n              ]}\n              onPress={() => setSelectedPayment('Cash on Delivery')}\n            >\n              <Text style={styles.paymentText}>Cash on Delivery</Text>\n            </TouchableOpacity>\n            <TouchableOpacity\n              style={[\n                styles.paymentOption,\n                selectedPayment === 'Online Payment' && styles.selectedOption,\n              ]}\n              onPress={() => setSelectedPayment('Online Payment')}\n            >\n              <Text style={styles.paymentText}>Online Payment</Text>\n            </TouchableOpacity>\n          </View>\n          <View style={styles.summaryContainer}>\n            <Text style={styles.summaryText}>Total Price: â‚¹{totalPrice.toFixed(2)}</Text>\n            <TouchableOpacity onPress={handleCheckout} style={styles.checkoutButton}>\n              <Text style={styles.checkoutButtonText}>Proceed to Checkout</Text>\n            </TouchableOpacity>\n          </View>\n        </>\n      )}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: { flex: 1, padding: 20, backgroundColor: '#f7f7f7' },\n  title: { fontSize: 24, fontWeight: 'bold', textAlign: 'center', marginBottom: 20 },\n  cartItem: { marginBottom: 15, borderBottomWidth: 1, borderBottomColor: '#ddd', paddingBottom: 10 },\n  itemText: { fontSize: 16, marginBottom: 5 },\n  removeButton: { marginTop: 10, backgroundColor: '#FF6347', padding: 10, borderRadius: 5 },\n  removeButtonText: { color: '#fff', textAlign: 'center' },\n  emptyCartText: { fontSize: 18, color: 'gray', textAlign: 'center', marginTop: 20 },\n  showItemsButton: { marginTop: 10, backgroundColor: '#4CAF50', padding: 10, borderRadius: 5 },\n  showItemsText: { color: '#fff', textAlign: 'center', fontSize: 16 },\n  // modalContainer: { flex: 1, justifyContent: 'center', backgroundColor: 'rgba(0,0,0,0.5)' },\n  // modalContent: { backgroundColor: '#fff', padding: 20, marginHorizontal: 20, borderRadius: 10 },\n  // modalTitle: { fontSize: 20, fontWeight: 'bold', marginBottom: 10, textAlign: 'center' },\n  // modalItem: { marginBottom: 15, borderBottomWidth: 1, borderBottomColor: '#ddd', paddingBottom: 10 },\n  // closeModalButton: { marginTop: 10, backgroundColor: '#FF6347', padding: 10, borderRadius: 5 },\n  // closeModalText: { color: '#fff', textAlign: 'center', fontSize: 16 },\n  addressContainer: { marginVertical: 20 },\n  inputLabel: { fontSize: 16, fontWeight: 'bold', marginBottom: 5 },\n  input: { borderWidth: 1, borderColor: '#ccc', borderRadius: 5, padding: 10, marginBottom: 10 },\n  paymentContainer: { marginTop: 20, padding: 10 },\n  paymentTitle: { fontSize: 18, fontWeight: 'bold', marginBottom: 10 },\n  paymentOption: { padding: 15, marginVertical: 5, borderRadius: 5, borderWidth: 1, borderColor: '#ddd' },\n  selectedOption: { borderColor: '#4CAF50', backgroundColor: '#e8f5e9' },\n  paymentText: { fontSize: 16 },\n  summaryContainer: { marginTop: 20, padding: 15, borderTopWidth: 1, borderTopColor: '#ddd', backgroundColor: '#fff', borderRadius: 5 },\n  summaryText: { fontSize: 18, fontWeight: 'bold' },\n  checkoutButton: { marginTop: 10, backgroundColor: '#FFA500', padding: 15, borderRadius: 5 },\n  checkoutButtonText: { color: '#fff', textAlign: 'center', fontSize: 18 },\n  toggleButton: { marginTop: 10, backgroundColor: '#FFA500', padding: 10, borderRadius: 5 },\n  toggleButtonText: { color: '#fff', textAlign: 'center', fontSize: 16 },\n});\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}