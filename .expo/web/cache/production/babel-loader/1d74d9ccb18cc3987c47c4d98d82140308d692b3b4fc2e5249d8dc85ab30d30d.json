{"ast":null,"code":"import React,{createContext,useContext,useState}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";const CartContext=createContext(undefined);export const CartProvider=({children})=>{const[cart,setCart]=useState([]);const addToCart=(product,quantity)=>{setCart(prevCart=>{const existingItem=prevCart.find(item=>item.id===product.id);if(existingItem){return prevCart.map(item=>item.id===product.id?Object.assign({},item,{cartQuantity:item.cartQuantity+quantity}):item);}else{return[...prevCart,Object.assign({},product,{cartQuantity:quantity})];}});};const removeFromCart=productId=>{setCart(prevCart=>prevCart.filter(item=>item.id!==productId));console.log;};const updateCartQuantity=(productId,quantity)=>{setCart(prevCart=>prevCart.map(item=>item.id===productId?Object.assign({},item,{cartQuantity:quantity}):item));};const totalPrice=cart.reduce((sum,item)=>sum+item.price*item.cartQuantity,0);return _jsx(CartContext.Provider,{value:{cart,addToCart,removeFromCart,updateCartQuantity,totalPrice},children:children});};export const useCart=()=>{const context=useContext(CartContext);if(!context){throw new Error('useCart must be used within a CartProvider');}return context;};","map":{"version":3,"names":["React","createContext","useContext","useState","jsx","_jsx","CartContext","undefined","CartProvider","children","cart","setCart","addToCart","product","quantity","prevCart","existingItem","find","item","id","map","Object","assign","cartQuantity","removeFromCart","productId","filter","console","log","updateCartQuantity","totalPrice","reduce","sum","price","Provider","value","useCart","context","Error"],"sources":["/Users/payalsah/Documents/FruitShopApp/contexts/CartContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState } from 'react';\n\n// Product type used across the app\ninterface Product {\n  id: number;\n  name: string;\n  price: number;\n  description: string;\n  image: string;\n}\n\n// CartItem extends Product, adding cartQuantity to track the amount in the cart\ninterface CartItem extends Product {\n  cartQuantity: number;\n}\n\n// CartContextType defines all the methods and data the context will provide\ninterface CartContextType {\n  cart: CartItem[];\n  addToCart: (product: Product, quantity: number) => void;\n  removeFromCart: (productId: number) => void;\n  updateCartQuantity: (productId: number, quantity: number) => void;\n  totalPrice: number;\n}\n\n// Create context with CartContextType or undefined (if not available)\nconst CartContext = createContext<CartContextType | undefined>(undefined);\n\nexport const CartProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\n  // Initialize cart state as an empty array\n  const [cart, setCart] = useState<CartItem[]>([]);\n\n  // Add product to the cart with a specific quantity\n  const addToCart = (product: Product, quantity: number) => {\n    setCart((prevCart) => {\n      const existingItem = prevCart.find((item) => item.id === product.id);\n      if (existingItem) {\n        // Update the cartQuantity if the item already exists in the cart\n        return prevCart.map((item) =>\n          item.id === product.id\n            ? { ...item, cartQuantity: item.cartQuantity + quantity }\n            : item\n        );\n      } else {\n        // Add a new item to the cart\n        return [...prevCart, { ...product, cartQuantity: quantity }];\n      }\n    });\n  };\n\n  // Remove product from the cart by id\n  const removeFromCart = (productId: number) => {\n    setCart((prevCart) => prevCart.filter((item) => item.id !== productId));\n    console.log\n  };\n\n  // Update quantity of a product in the cart\n  const updateCartQuantity = (productId: number, quantity: number) => {\n    setCart((prevCart) =>\n      prevCart.map((item) =>\n        item.id === productId ? { ...item, cartQuantity: quantity } : item\n      )\n    );\n  };\n\n  // Calculate the total price by multiplying the price with quantity for each item\n  const totalPrice = cart.reduce(\n    (sum, item) => sum + item.price * item.cartQuantity,\n    0\n  );\n\n  return (\n    <CartContext.Provider\n      value={{ cart, addToCart, removeFromCart, updateCartQuantity, totalPrice }}\n    >\n      {children}\n    </CartContext.Provider>\n  );\n};\n\n// Custom hook to access cart data and methods\nexport const useCart = () => {\n  const context = useContext(CartContext);\n  if (!context) {\n    throw new Error('useCart must be used within a CartProvider');\n  }\n  return context;\n};\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,UAAU,CAAEC,QAAQ,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBA0BnE,KAAM,CAAAC,WAAW,CAAGL,aAAa,CAA8BM,SAAS,CAAC,CAEzE,MAAO,MAAM,CAAAC,YAAqD,CAAGA,CAAC,CAAEC,QAAS,CAAC,GAAK,CAErF,KAAM,CAACC,IAAI,CAAEC,OAAO,CAAC,CAAGR,QAAQ,CAAa,EAAE,CAAC,CAGhD,KAAM,CAAAS,SAAS,CAAGA,CAACC,OAAgB,CAAEC,QAAgB,GAAK,CACxDH,OAAO,CAAEI,QAAQ,EAAK,CACpB,KAAM,CAAAC,YAAY,CAAGD,QAAQ,CAACE,IAAI,CAAEC,IAAI,EAAKA,IAAI,CAACC,EAAE,GAAKN,OAAO,CAACM,EAAE,CAAC,CACpE,GAAIH,YAAY,CAAE,CAEhB,MAAO,CAAAD,QAAQ,CAACK,GAAG,CAAEF,IAAI,EACvBA,IAAI,CAACC,EAAE,GAAKN,OAAO,CAACM,EAAE,CAAAE,MAAA,CAAAC,MAAA,IACbJ,IAAI,EAAEK,YAAY,CAAEL,IAAI,CAACK,YAAY,CAAGT,QAAQ,GACrDI,IACN,CAAC,CACH,CAAC,IAAM,CAEL,MAAO,CAAC,GAAGH,QAAQ,CAAAM,MAAA,CAAAC,MAAA,IAAOT,OAAO,EAAEU,YAAY,CAAET,QAAQ,GAAG,CAC9D,CACF,CAAC,CAAC,CACJ,CAAC,CAGD,KAAM,CAAAU,cAAc,CAAIC,SAAiB,EAAK,CAC5Cd,OAAO,CAAEI,QAAQ,EAAKA,QAAQ,CAACW,MAAM,CAAER,IAAI,EAAKA,IAAI,CAACC,EAAE,GAAKM,SAAS,CAAC,CAAC,CACvEE,OAAO,CAACC,GAAG,CACb,CAAC,CAGD,KAAM,CAAAC,kBAAkB,CAAGA,CAACJ,SAAiB,CAAEX,QAAgB,GAAK,CAClEH,OAAO,CAAEI,QAAQ,EACfA,QAAQ,CAACK,GAAG,CAAEF,IAAI,EAChBA,IAAI,CAACC,EAAE,GAAKM,SAAS,CAAAJ,MAAA,CAAAC,MAAA,IAAQJ,IAAI,EAAEK,YAAY,CAAET,QAAQ,GAAKI,IAChE,CACF,CAAC,CACH,CAAC,CAGD,KAAM,CAAAY,UAAU,CAAGpB,IAAI,CAACqB,MAAM,CAC5B,CAACC,GAAG,CAAEd,IAAI,GAAKc,GAAG,CAAGd,IAAI,CAACe,KAAK,CAAGf,IAAI,CAACK,YAAY,CACnD,CACF,CAAC,CAED,MACE,CAAAlB,IAAA,CAACC,WAAW,CAAC4B,QAAQ,EACnBC,KAAK,CAAE,CAAEzB,IAAI,CAAEE,SAAS,CAAEY,cAAc,CAAEK,kBAAkB,CAAEC,UAAW,CAAE,CAAArB,QAAA,CAE1EA,QAAQ,CACW,CAAC,CAE3B,CAAC,CAGD,MAAO,MAAM,CAAA2B,OAAO,CAAGA,CAAA,GAAM,CAC3B,KAAM,CAAAC,OAAO,CAAGnC,UAAU,CAACI,WAAW,CAAC,CACvC,GAAI,CAAC+B,OAAO,CAAE,CACZ,KAAM,IAAI,CAAAC,KAAK,CAAC,4CAA4C,CAAC,CAC/D,CACA,MAAO,CAAAD,OAAO,CAChB,CAAC","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}