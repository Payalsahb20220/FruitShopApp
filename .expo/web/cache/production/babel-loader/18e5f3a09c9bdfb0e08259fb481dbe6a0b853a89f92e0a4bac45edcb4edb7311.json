{"ast":null,"code":"import React,{useState}from'react';import View from\"react-native-web/dist/exports/View\";import Text from\"react-native-web/dist/exports/Text\";import TextInput from\"react-native-web/dist/exports/TextInput\";import TouchableOpacity from\"react-native-web/dist/exports/TouchableOpacity\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import Alert from\"react-native-web/dist/exports/Alert\";import ActivityIndicator from\"react-native-web/dist/exports/ActivityIndicator\";import{useNavigation}from'@react-navigation/native';import{signInWithEmailAndPassword}from'firebase/auth';import{auth}from'../firebaseConfig';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function LoginScreen(){const[emailOrMobile,setEmailOrMobile]=useState('');const[password,setPassword]=useState('');const[isLoading,setIsLoading]=useState(false);const navigation=useNavigation();const handleLogin=async()=>{if(!emailOrMobile||!password){Alert.alert(\"Error\",\"Both fields are required!\");return;}setIsLoading(true);try{const userCredential=await signInWithEmailAndPassword(auth,emailOrMobile,password);const user=userCredential.user;if(!user.emailVerified){Alert.alert(\"Email Not Verified\",\"Please verify your email before logging in.\");return;}console.log(\"User logged in:\",user);Alert.alert(\"Success\",\"Logged in successfully!\");navigation.navigate(\"Home\");}catch(error){console.error(\"Login Error:\",error.message);Alert.alert(\"Error\",error.message);}finally{setIsLoading(false);}};return _jsxs(View,{style:styles.container,children:[_jsx(Text,{style:styles.title,children:\"Login\"}),_jsx(TextInput,{style:styles.input,placeholder:\"Enter Email\",placeholderTextColor:\"#aaa\",value:emailOrMobile,onChangeText:setEmailOrMobile}),_jsx(TextInput,{style:styles.input,placeholder:\"Enter Password\",placeholderTextColor:\"#aaa\",secureTextEntry:true,value:password,onChangeText:setPassword}),_jsx(TouchableOpacity,{style:[styles.button,isLoading&&styles.buttonDisabled],onPress:handleLogin,disabled:isLoading,children:isLoading?_jsx(ActivityIndicator,{color:\"#fff\"}):_jsx(Text,{style:styles.buttonText,children:\"Login\"})}),_jsx(TouchableOpacity,{onPress:()=>navigation.navigate('Signup'),style:styles.linkButton,children:_jsx(Text,{style:styles.linkText,children:\"New here? Sign up\"})})]});}const styles=StyleSheet.create({container:{flex:1,justifyContent:'center',alignItems:'center',backgroundColor:'#fff',padding:20},title:{fontSize:24,fontWeight:'bold',color:'#333',marginBottom:20},input:{width:'90%',backgroundColor:'#f9f9f9',padding:15,borderRadius:8,borderWidth:1,borderColor:'#ddd',marginBottom:20},button:{backgroundColor:'#FFA500',padding:15,borderRadius:8,width:'80%',alignItems:'center',marginVertical:10},buttonDisabled:{backgroundColor:'#FFC04C'},buttonText:{color:'#fff',fontSize:16,fontWeight:'bold'},linkButton:{marginTop:10},linkText:{color:'#FFA500',fontSize:14,fontWeight:'bold'}});","map":{"version":3,"names":["React","useState","View","Text","TextInput","TouchableOpacity","StyleSheet","Alert","ActivityIndicator","useNavigation","signInWithEmailAndPassword","auth","jsx","_jsx","jsxs","_jsxs","LoginScreen","emailOrMobile","setEmailOrMobile","password","setPassword","isLoading","setIsLoading","navigation","handleLogin","alert","userCredential","user","emailVerified","console","log","navigate","error","message","style","styles","container","children","title","input","placeholder","placeholderTextColor","value","onChangeText","secureTextEntry","button","buttonDisabled","onPress","disabled","color","buttonText","linkButton","linkText","create","flex","justifyContent","alignItems","backgroundColor","padding","fontSize","fontWeight","marginBottom","width","borderRadius","borderWidth","borderColor","marginVertical","marginTop"],"sources":["/Users/payalsah/Documents/FruitShopApp/screens/LoginScreen.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { View, Text, TextInput, TouchableOpacity, StyleSheet, Alert, ActivityIndicator } from 'react-native';\nimport { useNavigation } from '@react-navigation/native';\nimport { NativeStackNavigationProp } from '@react-navigation/native-stack';\nimport { RootStackParamList } from '../navigation/types';\nimport { signInWithEmailAndPassword } from 'firebase/auth';\nimport { auth } from '../firebaseConfig';\n\ntype LoginScreenNavigationProp = NativeStackNavigationProp<RootStackParamList, 'Login'>;\n\nexport default function LoginScreen() {\n  const [emailOrMobile, setEmailOrMobile] = useState('');\n  const [password, setPassword] = useState('');\n  const [isLoading, setIsLoading] = useState(false); // For button state\n  const navigation = useNavigation<LoginScreenNavigationProp>();\n\n  const handleLogin = async () => {\n    if (!emailOrMobile || !password) {\n      Alert.alert(\"Error\", \"Both fields are required!\");\n      return;\n    }\n\n    setIsLoading(true); // Button in \"loading\" state\n    try {\n      const userCredential = await signInWithEmailAndPassword(auth, emailOrMobile, password);\n      const user = userCredential.user;\n\n      // Check if email is verified\n      if (!user.emailVerified) {\n        Alert.alert(\n          \"Email Not Verified\",\n          \"Please verify your email before logging in.\"\n        );\n        return;\n      }\n\n      console.log(\"User logged in:\", user);\n      Alert.alert(\"Success\", \"Logged in successfully!\");\n      navigation.navigate(\"Home\"); // Navigate after success\n    } catch (error: any) {\n      console.error(\"Login Error:\", error.message);\n      Alert.alert(\"Error\", error.message);\n    } finally {\n      setIsLoading(false); // Reset button state\n    }\n  };\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>Login</Text>\n      <TextInput\n        style={styles.input}\n        placeholder=\"Enter Email\"\n        placeholderTextColor=\"#aaa\"\n        value={emailOrMobile}\n        onChangeText={setEmailOrMobile}\n      />\n      <TextInput\n        style={styles.input}\n        placeholder=\"Enter Password\"\n        placeholderTextColor=\"#aaa\"\n        secureTextEntry\n        value={password}\n        onChangeText={setPassword}\n      />\n      <TouchableOpacity\n        style={[styles.button, isLoading && styles.buttonDisabled]}\n        onPress={handleLogin}\n        disabled={isLoading}\n      >\n        {isLoading ? (\n          <ActivityIndicator color=\"#fff\" />\n        ) : (\n          <Text style={styles.buttonText}>Login</Text>\n        )}\n      </TouchableOpacity>\n      <TouchableOpacity\n        onPress={() => navigation.navigate('Signup')}\n        style={styles.linkButton}\n      >\n        <Text style={styles.linkText}>New here? Sign up</Text>\n      </TouchableOpacity>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#fff',\n    padding: 20,\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: '#333',\n    marginBottom: 20,\n  },\n  input: {\n    width: '90%',\n    backgroundColor: '#f9f9f9',\n    padding: 15,\n    borderRadius: 8,\n    borderWidth: 1,\n    borderColor: '#ddd',\n    marginBottom: 20,\n  },\n  button: {\n    backgroundColor: '#FFA500',\n    padding: 15,\n    borderRadius: 8,\n    width: '80%',\n    alignItems: 'center',\n    marginVertical: 10,\n  },\n  buttonDisabled: {\n    backgroundColor: '#FFC04C', // Lighter orange for the disabled state\n  },\n  buttonText: {\n    color: '#fff',\n    fontSize: 16,\n    fontWeight: 'bold',\n  },\n  linkButton: {\n    marginTop: 10,\n  },\n  linkText: {\n    color: '#FFA500',\n    fontSize: 14,\n    fontWeight: 'bold',\n  },\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}